7  0%                                             8[0Kbash-4.4# mvn compile && mvn exec:java -Dexec.mainClass="main.Main"
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------------< [0;36mMITDbG:back-end[0;1m >---------------------------[m
[[1;34mINFO[m] [1mBuilding back-end 1.0-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mback-end[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 0 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.2:compile[m [1m(default-compile)[m @ [36mback-end[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 39 source files to /kyrix/back-end/target/classes
[[1;34mINFO[m] /kyrix/back-end/src/main/java/index/Indexer.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /kyrix/back-end/src/main/java/index/Indexer.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  2.055 s
[[1;34mINFO[m] Finished at: 2019-11-29T05:44:52Z
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------------< [0;36mMITDbG:back-end[0;1m >---------------------------[m
[[1;34mINFO[m] [1mBuilding back-end 1.0-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mexec-maven-plugin:1.6.0:java[m [1m(default-cli)[m @ [36mback-end[0;1m ---[m
Reading config file...
dbtype: citus  Config.database=CITUS
Creating tile cache...
Starting server...
Backend server started...
Waiting for project definition...


Serving /project
 New project definition coming...
Current project set to: autodd_citus
There is diff that requires recomputing indexes. Shutting down server and recomputing...
Precomputing...
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
Indexer type: AutoDDCitusIndexer
drop table if exists bbox_autodd_citus_autodd0_level0layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level0layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
Setting common variables...
numLevels = 11
numRawColumns = 3
Raw columns: 
x int4 y int4 z int4 
Getting # of raw columns took: 0.045015777s.
rawTable = dots
theta = 1.0
topLevelWidth = 1500
topLevelHeight = 1000
[loX, hiX] = [0.0, 1000000.0]
[loY, hiY] = [0.0, 1000000.0]
xCol = x
yCol = y
SELECT count(*) FROM dots;
Running count(*) on dots took: 0.38199808s.
numRawRows = 64000000
Augmenting raw data table...
ALTER TABLE dots ADD COLUMN IF NOT EXISTS cx real;
ALTER TABLE dots ADD COLUMN IF NOT EXISTS cy real;
ALTER TABLE dots ADD COLUMN IF NOT EXISTS centroid point;
UPDATE dots SET cx = (1360 * (x - 0.0) / 1000000.0 + 70.0) * 1.0E10, cy = (860 * (y - 0.0) / 1000000.0 + 70.0) * 1.0E10;
Populating cx, cy column on dots took: 11.404571981s.
UPDATE dots SET centroid = point(cx, cy);
Populating centroid column on dots took: 5.486449379s.
DROP INDEX IF EXISTS rawtable_centroid_gist;
Drop existing index on centroid took: 0.002326088s.
CREATE INDEX rawtable_centroid_gist ON dots USING gist(centroid);
Creating gist index on centroid took: 39.543300717s.
Building KD tree...
KDTree root: 7.0E11, 7.0E11, 1.43E13, 9.3E12
SELECT count(*) FROM dots WHERE centroid <@ box('7.0E11, 7.0E11, 1.43E13, 9.3E12');
Root count: 63999853
Getting root count took: 0.999360893s.
Current KD-tree node being split: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=63999853, splitPoint=3.78125E12}
Binary search took: 4.303666707s.
Current KD-tree node being split: KDTree{minx=7.0E11, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=31901797, splitPoint=2.240625E12}
Binary search took: 0.401023548s.
Current KD-tree node being split: KDTree{minx=3.78125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=32098056, splitPoint=5.342626953125E12}
Binary search took: 3.181905187s.
Current KD-tree node being split: KDTree{minx=7.0E11, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=15953323, splitPoint=1.4703125E12}
Binary search took: 0.290075314s.
Current KD-tree node being split: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=15948474, splitPoint=3.0109375E12}
Binary search took: 0.311711218s.
Current KD-tree node being split: KDTree{minx=3.78125E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=16162702, splitPoint=4.5619384765625E12}
Binary search took: 0.319899382s.
Current KD-tree node being split: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=15935354, splitPoint=6.11240119934082E12}
Binary search took: 2.150634117s.
Current KD-tree node being split: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=7976297, splitPoint=1.08515625E12}
Binary search took: 0.241741643s.
Current KD-tree node being split: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=7977026, splitPoint=1.85546875E12}
Binary search took: 0.237758572s.
Current KD-tree node being split: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=7976294, splitPoint=2.62578125E12}
Binary search took: 0.235383902s.
Current KD-tree node being split: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=7972180, splitPoint=3.39609375E12}
Binary search took: 0.248645837s.
Current KD-tree node being split: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=8081912, splitPoint=4.17159423828125E12}
Binary search took: 0.239916136s.
Current KD-tree node being split: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=8080790, splitPoint=4.95228271484375E12}
Binary search took: 0.246901345s.
Current KD-tree node being split: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=7972304, splitPoint=5.72751407623291E12}
Binary search took: 0.248837028s.
Current KD-tree node being split: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=7963050, splitPoint=1.007826936841011E13}
Binary search took: 1.163992413s.
Current KD-tree node being split: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.08515625E12, maxy=9.3E12, splitDir=VERTICAL, count=3987531, splitPoint=8.92578125E11}
Binary search took: 0.200632945s.
Current KD-tree node being split: KDTree{minx=1.08515625E12, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=3988766, splitPoint=1.277734375E12}
Binary search took: 0.196623277s.
Current KD-tree node being split: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=1.85546875E12, maxy=9.3E12, splitDir=VERTICAL, count=3987311, splitPoint=1.662890625E12}
Binary search took: 0.20598644s.
Current KD-tree node being split: KDTree{minx=1.85546875E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=3989715, splitPoint=2.048046875E12}
Binary search took: 0.214415345s.
Current KD-tree node being split: KDTree{minx=2.240625E12, miny=7.0E11, maxx=2.62578125E12, maxy=9.3E12, splitDir=VERTICAL, count=3987807, splitPoint=2.433203125E12}
Binary search took: 0.194400964s.
Current KD-tree node being split: KDTree{minx=2.62578125E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=3988487, splitPoint=2.818359375E12}
Binary search took: 0.212912078s.
Current KD-tree node being split: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.39609375E12, maxy=9.3E12, splitDir=VERTICAL, count=3986088, splitPoint=3.203515625E12}
Binary search took: 0.194966865s.
Current KD-tree node being split: KDTree{minx=3.39609375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=3986092, splitPoint=3.588671875E12}
Binary search took: 0.214793277s.
Current KD-tree node being split: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.17159423828125E12, maxy=9.3E12, splitDir=VERTICAL, count=4038882, splitPoint=3.976422119140625E12}
Binary search took: 0.200534226s.
Current KD-tree node being split: KDTree{minx=4.17159423828125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=4043030, splitPoint=4.366766357421875E12}
Binary search took: 0.209501608s.
Current KD-tree node being split: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=4.95228271484375E12, maxy=9.3E12, splitDir=VERTICAL, count=4040219, splitPoint=4.757110595703125E12}
Binary search took: 0.208770324s.
Current KD-tree node being split: KDTree{minx=4.95228271484375E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=4040571, splitPoint=5.147454833984375E12}
Binary search took: 0.202582219s.
Current KD-tree node being split: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=5.72751407623291E12, maxy=9.3E12, splitDir=VERTICAL, count=3985210, splitPoint=5.535070514678955E12}
Binary search took: 0.21522142s.
Current KD-tree node being split: KDTree{minx=5.72751407623291E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=3987094, splitPoint=5.919957637786865E12}
Binary search took: 0.202233579s.
Current KD-tree node being split: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.007826936841011E13, maxy=9.3E12, splitDir=VERTICAL, count=3991150, splitPoint=7.97140190359205E12}
Binary search took: 0.74989829s.
Current KD-tree node being split: KDTree{minx=1.007826936841011E13, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=3971900, splitPoint=1.2189134684205055E13}
Binary search took: 0.111644731s.

************************************************
Building KD-tree took: 17.578126107s.
************************************************

1994547 1992984 1994161 1994605 1994615 1992696 1995215 1994500 1992793 1995014 1992882 1995605 1993590 1992498 1992426 1993666 2020357 2018525 2021950 2021080 2019663 2020556 2020367 2020204 1990718 1994492 1993857 1993237 2008953 1982197 1986409 1985491 
Creating bbox tables for all levels...
DROP TABLE IF EXISTS bottom_level
CREATE UNLOGGED TABLE bottom_level(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
SELECT create_distributed_table('bottom_level', 'hash_key');
DROP TABLE IF EXISTS l10
CREATE UNLOGGED TABLE l10(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
SELECT create_distributed_table('l10', 'hash_key', colocate_with => 'bottom_level');
DROP TABLE IF EXISTS l9
CREATE UNLOGGED TABLE l9(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
SELECT create_distributed_table('l9', 'hash_key', colocate_with => 'bottom_level');
DROP TABLE IF EXISTS l8
CREATE UNLOGGED TABLE l8(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
SELECT create_distributed_table('l8', 'hash_key', colocate_with => 'bottom_level');
DROP TABLE IF EXISTS l7
CREATE UNLOGGED TABLE l7(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
SELECT create_distributed_table('l7', 'hash_key', colocate_with => 'bottom_level');
DROP TABLE IF EXISTS l6
CREATE UNLOGGED TABLE l6(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l5
CREATE UNLOGGED TABLE l5(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l4
CREATE UNLOGGED TABLE l4(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l3
CREATE UNLOGGED TABLE l3(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l2
CREATE UNLOGGED TABLE l2(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l1
CREATE UNLOGGED TABLE l1(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
DROP TABLE IF EXISTS l0
CREATE UNLOGGED TABLE l0(x int4, y int4, z int4, hash_key int, cluster_agg text, cx real, cy real, minx real, miny real, maxx real, maxy real, centroid point);
Generating citus hash keys...

SELECT shardid, nodename, nodeport FROM pg_dist_node, pg_dist_placement WHERE pg_dist_node.groupid = pg_dist_placement.groupid;
=============== now printing out partitions ===============
Hash key: 0, Bottom level shard ID: 102053, ip = 10.60.1.2, port = 5432, minx = 7.0E11, miny = 7.0E11, maxx = 8.92578125E11, maxy = 9.3E12,  expected count = 1994547
Hash key: 1, Bottom level shard ID: 102041, ip = 10.60.1.2, port = 5432, minx = 8.92578125E11, miny = 7.0E11, maxx = 1.08515625E12, maxy = 9.3E12,  expected count = 1992984
Hash key: 2, Bottom level shard ID: 102064, ip = 10.60.0.2, port = 5432, minx = 1.08515625E12, miny = 7.0E11, maxx = 1.277734375E12, maxy = 9.3E12,  expected count = 1994161
Hash key: 3, Bottom level shard ID: 102055, ip = 10.60.5.2, port = 5432, minx = 1.277734375E12, miny = 7.0E11, maxx = 1.4703125E12, maxy = 9.3E12,  expected count = 1994605
Hash key: 4, Bottom level shard ID: 102048, ip = 10.60.0.2, port = 5432, minx = 1.4703125E12, miny = 7.0E11, maxx = 1.662890625E12, maxy = 9.3E12,  expected count = 1994615
Hash key: 5, Bottom level shard ID: 102046, ip = 10.60.3.3, port = 5432, minx = 1.662890625E12, miny = 7.0E11, maxx = 1.85546875E12, maxy = 9.3E12,  expected count = 1992696
Hash key: 6, Bottom level shard ID: 102060, ip = 10.60.0.2, port = 5432, minx = 1.85546875E12, miny = 7.0E11, maxx = 2.048046875E12, maxy = 9.3E12,  expected count = 1995215
Hash key: 8, Bottom level shard ID: 102040, ip = 10.60.0.2, port = 5432, minx = 2.048046875E12, miny = 7.0E11, maxx = 2.240625E12, maxy = 9.3E12,  expected count = 1994500
Hash key: 9, Bottom level shard ID: 102068, ip = 10.60.0.2, port = 5432, minx = 2.240625E12, miny = 7.0E11, maxx = 2.433203125E12, maxy = 9.3E12,  expected count = 1992793
Hash key: 10, Bottom level shard ID: 102044, ip = 10.60.0.2, port = 5432, minx = 2.433203125E12, miny = 7.0E11, maxx = 2.62578125E12, maxy = 9.3E12,  expected count = 1995014
Hash key: 11, Bottom level shard ID: 102070, ip = 10.60.3.3, port = 5432, minx = 2.62578125E12, miny = 7.0E11, maxx = 2.818359375E12, maxy = 9.3E12,  expected count = 1992882
Hash key: 13, Bottom level shard ID: 102063, ip = 10.60.5.2, port = 5432, minx = 2.818359375E12, miny = 7.0E11, maxx = 3.0109375E12, maxy = 9.3E12,  expected count = 1995605
Hash key: 16, Bottom level shard ID: 102050, ip = 10.60.3.3, port = 5432, minx = 3.0109375E12, miny = 7.0E11, maxx = 3.203515625E12, maxy = 9.3E12,  expected count = 1993590
Hash key: 17, Bottom level shard ID: 102049, ip = 10.60.1.2, port = 5432, minx = 3.203515625E12, miny = 7.0E11, maxx = 3.39609375E12, maxy = 9.3E12,  expected count = 1992498
Hash key: 18, Bottom level shard ID: 102071, ip = 10.60.5.2, port = 5432, minx = 3.39609375E12, miny = 7.0E11, maxx = 3.588671875E12, maxy = 9.3E12,  expected count = 1992426
Hash key: 21, Bottom level shard ID: 102061, ip = 10.60.1.2, port = 5432, minx = 3.588671875E12, miny = 7.0E11, maxx = 3.78125E12, maxy = 9.3E12,  expected count = 1993666
Hash key: 22, Bottom level shard ID: 102069, ip = 10.60.1.2, port = 5432, minx = 3.78125E12, miny = 7.0E11, maxx = 3.976422119140625E12, maxy = 9.3E12,  expected count = 2020357
Hash key: 24, Bottom level shard ID: 102043, ip = 10.60.5.2, port = 5432, minx = 3.976422119140625E12, miny = 7.0E11, maxx = 4.17159423828125E12, maxy = 9.3E12,  expected count = 2018525
Hash key: 27, Bottom level shard ID: 102065, ip = 10.60.1.2, port = 5432, minx = 4.17159423828125E12, miny = 7.0E11, maxx = 4.366766357421875E12, maxy = 9.3E12,  expected count = 2021950
Hash key: 28, Bottom level shard ID: 102059, ip = 10.60.5.2, port = 5432, minx = 4.366766357421875E12, miny = 7.0E11, maxx = 4.5619384765625E12, maxy = 9.3E12,  expected count = 2021080
Hash key: 31, Bottom level shard ID: 102042, ip = 10.60.3.3, port = 5432, minx = 4.5619384765625E12, miny = 7.0E11, maxx = 4.757110595703125E12, maxy = 9.3E12,  expected count = 2019663
Hash key: 36, Bottom level shard ID: 102052, ip = 10.60.0.2, port = 5432, minx = 4.757110595703125E12, miny = 7.0E11, maxx = 4.95228271484375E12, maxy = 9.3E12,  expected count = 2020556
Hash key: 37, Bottom level shard ID: 102054, ip = 10.60.3.3, port = 5432, minx = 4.95228271484375E12, miny = 7.0E11, maxx = 5.147454833984375E12, maxy = 9.3E12,  expected count = 2020367
Hash key: 39, Bottom level shard ID: 102062, ip = 10.60.3.3, port = 5432, minx = 5.147454833984375E12, miny = 7.0E11, maxx = 5.342626953125E12, maxy = 9.3E12,  expected count = 2020204
Hash key: 41, Bottom level shard ID: 102067, ip = 10.60.5.2, port = 5432, minx = 5.342626953125E12, miny = 7.0E11, maxx = 5.535070514678955E12, maxy = 9.3E12,  expected count = 1990718
Hash key: 48, Bottom level shard ID: 102045, ip = 10.60.1.2, port = 5432, minx = 5.535070514678955E12, miny = 7.0E11, maxx = 5.72751407623291E12, maxy = 9.3E12,  expected count = 1994492
Hash key: 50, Bottom level shard ID: 102047, ip = 10.60.5.2, port = 5432, minx = 5.72751407623291E12, miny = 7.0E11, maxx = 5.919957637786865E12, maxy = 9.3E12,  expected count = 1993857
Hash key: 52, Bottom level shard ID: 102056, ip = 10.60.0.2, port = 5432, minx = 5.919957637786865E12, miny = 7.0E11, maxx = 6.11240119934082E12, maxy = 9.3E12,  expected count = 1993237
Hash key: 58, Bottom level shard ID: 102066, ip = 10.60.3.3, port = 5432, minx = 6.11240119934082E12, miny = 7.0E11, maxx = 7.97140190359205E12, maxy = 9.3E12,  expected count = 2008953
Hash key: 62, Bottom level shard ID: 102057, ip = 10.60.1.2, port = 5432, minx = 7.97140190359205E12, miny = 7.0E11, maxx = 1.007826936841011E13, maxy = 9.3E12,  expected count = 1982197
Hash key: 85, Bottom level shard ID: 102051, ip = 10.60.5.2, port = 5432, minx = 1.007826936841011E13, miny = 7.0E11, maxx = 1.2189134684205055E13, maxy = 9.3E12,  expected count = 1986409
Hash key: 136, Bottom level shard ID: 102058, ip = 10.60.3.3, port = 5432, minx = 1.2189134684205055E13, miny = 7.0E11, maxx = 1.43E13, maxy = 9.3E12,  expected count = 1985491
Creating fake bottom level table...
Creating get_citus_spatial_hash_key on master:
CREATE OR REPLACE FUNCTION get_citus_spatial_hash_key(cx real, cy real) returns int AS $$ 

    if (!("partitions" in plv8)) plv8.partitions = [[7.0E11,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 1.08515625E12, 9.3E12],[1.08515625E12,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 1.85546875E12, 9.3E12],[1.85546875E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 2.62578125E12, 9.3E12],[2.62578125E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.39609375E12, 9.3E12],[3.39609375E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 4.17159423828125E12, 9.3E12],[4.17159423828125E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 4.95228271484375E12, 9.3E12],[4.95228271484375E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 5.72751407623291E12, 9.3E12],[5.72751407623291E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 1.007826936841011E13, 9.3E12],[1.007826936841011E13,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 8.92578125E11, 9.3E12],[8.92578125E11,7.0E11, 1.08515625E12, 9.3E12],[1.08515625E12,7.0E11, 1.277734375E12, 9.3E12],[1.277734375E12,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 1.662890625E12, 9.3E12],[1.662890625E12,7.0E11, 1.85546875E12, 9.3E12],[1.85546875E12,7.0E11, 2.048046875E12, 9.3E12],[2.048046875E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 2.433203125E12, 9.3E12],[2.433203125E12,7.0E11, 2.62578125E12, 9.3E12],[2.62578125E12,7.0E11, 2.818359375E12, 9.3E12],[2.818359375E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.203515625E12, 9.3E12],[3.203515625E12,7.0E11, 3.39609375E12, 9.3E12],[3.39609375E12,7.0E11, 3.588671875E12, 9.3E12],[3.588671875E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 3.976422119140625E12, 9.3E12],[3.976422119140625E12,7.0E11, 4.17159423828125E12, 9.3E12],[4.17159423828125E12,7.0E11, 4.366766357421875E12, 9.3E12],[4.366766357421875E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 4.757110595703125E12, 9.3E12],[4.757110595703125E12,7.0E11, 4.95228271484375E12, 9.3E12],[4.95228271484375E12,7.0E11, 5.147454833984375E12, 9.3E12],[5.147454833984375E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 5.535070514678955E12, 9.3E12],[5.535070514678955E12,7.0E11, 5.72751407623291E12, 9.3E12],[5.72751407623291E12,7.0E11, 5.919957637786865E12, 9.3E12],[5.919957637786865E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 7.97140190359205E12, 9.3E12],[7.97140190359205E12,7.0E11, 1.007826936841011E13, 9.3E12],[1.007826936841011E13,7.0E11, 1.2189134684205055E13, 9.3E12],[1.2189134684205055E13,7.0E11, 1.43E13, 9.3E12]];
    if (!("hashkeys" in plv8)) plv8.hashkeys = [0,1,2,3,4,5,6,8,9,10,11,13,16,17,18,21,22,24,27,28,31,36,37,39,41,48,50,52,58,62,85,136];

    var partitions = plv8.partitions;
    var hashkeys = plv8.hashkeys;
    var i = 0;
    while (true) {
        if (i * 2 + 1 >= partitions.length)
            return hashkeys[i - (partitions.length - 1) / 2];
        if (
            cx >= partitions[i * 2 + 1][0] &&
            cx <= partitions[i * 2 + 1][2] &&
            cy >= partitions[i * 2 + 1][1] &&
            cy <= partitions[i * 2 + 1][3]
        )
            i = i * 2 + 1;
        else i = i * 2 + 2;
    }
    return -1;

 $$ LANGUAGE plv8 STABLE;
CREATING get_citus_spatial_hash_key on workers:
SELECT run_command_on_workers($cmd$ CREATE OR REPLACE FUNCTION get_citus_spatial_hash_key(cx real, cy real) returns int AS $$ 

    if (!("partitions" in plv8)) plv8.partitions = [[7.0E11,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 1.08515625E12, 9.3E12],[1.08515625E12,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 1.85546875E12, 9.3E12],[1.85546875E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 2.62578125E12, 9.3E12],[2.62578125E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.39609375E12, 9.3E12],[3.39609375E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 4.17159423828125E12, 9.3E12],[4.17159423828125E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 4.95228271484375E12, 9.3E12],[4.95228271484375E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 5.72751407623291E12, 9.3E12],[5.72751407623291E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 1.007826936841011E13, 9.3E12],[1.007826936841011E13,7.0E11, 1.43E13, 9.3E12],[7.0E11,7.0E11, 8.92578125E11, 9.3E12],[8.92578125E11,7.0E11, 1.08515625E12, 9.3E12],[1.08515625E12,7.0E11, 1.277734375E12, 9.3E12],[1.277734375E12,7.0E11, 1.4703125E12, 9.3E12],[1.4703125E12,7.0E11, 1.662890625E12, 9.3E12],[1.662890625E12,7.0E11, 1.85546875E12, 9.3E12],[1.85546875E12,7.0E11, 2.048046875E12, 9.3E12],[2.048046875E12,7.0E11, 2.240625E12, 9.3E12],[2.240625E12,7.0E11, 2.433203125E12, 9.3E12],[2.433203125E12,7.0E11, 2.62578125E12, 9.3E12],[2.62578125E12,7.0E11, 2.818359375E12, 9.3E12],[2.818359375E12,7.0E11, 3.0109375E12, 9.3E12],[3.0109375E12,7.0E11, 3.203515625E12, 9.3E12],[3.203515625E12,7.0E11, 3.39609375E12, 9.3E12],[3.39609375E12,7.0E11, 3.588671875E12, 9.3E12],[3.588671875E12,7.0E11, 3.78125E12, 9.3E12],[3.78125E12,7.0E11, 3.976422119140625E12, 9.3E12],[3.976422119140625E12,7.0E11, 4.17159423828125E12, 9.3E12],[4.17159423828125E12,7.0E11, 4.366766357421875E12, 9.3E12],[4.366766357421875E12,7.0E11, 4.5619384765625E12, 9.3E12],[4.5619384765625E12,7.0E11, 4.757110595703125E12, 9.3E12],[4.757110595703125E12,7.0E11, 4.95228271484375E12, 9.3E12],[4.95228271484375E12,7.0E11, 5.147454833984375E12, 9.3E12],[5.147454833984375E12,7.0E11, 5.342626953125E12, 9.3E12],[5.342626953125E12,7.0E11, 5.535070514678955E12, 9.3E12],[5.535070514678955E12,7.0E11, 5.72751407623291E12, 9.3E12],[5.72751407623291E12,7.0E11, 5.919957637786865E12, 9.3E12],[5.919957637786865E12,7.0E11, 6.11240119934082E12, 9.3E12],[6.11240119934082E12,7.0E11, 7.97140190359205E12, 9.3E12],[7.97140190359205E12,7.0E11, 1.007826936841011E13, 9.3E12],[1.007826936841011E13,7.0E11, 1.2189134684205055E13, 9.3E12],[1.2189134684205055E13,7.0E11, 1.43E13, 9.3E12]];
    if (!("hashkeys" in plv8)) plv8.hashkeys = [0,1,2,3,4,5,6,8,9,10,11,13,16,17,18,21,22,24,27,28,31,36,37,39,41,48,50,52,58,62,85,136];

    var partitions = plv8.partitions;
    var hashkeys = plv8.hashkeys;
    var i = 0;
    while (true) {
        if (i * 2 + 1 >= partitions.length)
            return hashkeys[i - (partitions.length - 1) / 2];
        if (
            cx >= partitions[i * 2 + 1][0] &&
            cx <= partitions[i * 2 + 1][2] &&
            cy >= partitions[i * 2 + 1][1] &&
            cy <= partitions[i * 2 + 1][3]
        )
            i = i * 2 + 1;
        else i = i * 2 + 2;
    }
    return -1;

 $$ LANGUAGE plv8 $cmd$);
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 0;
Batch 0 took: 11.234403345s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 1;
Batch 1 took: 11.022033936s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 2;
Batch 2 took: 11.715722258s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 3;
Batch 3 took: 12.084936313s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 4;
Batch 4 took: 10.924937289s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 5;
Batch 5 took: 10.75994694s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 6;
Batch 6 took: 10.772279086s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 7;
Batch 7 took: 10.815967017s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 8;
Batch 8 took: 10.829251836s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 9;
Batch 9 took: 11.967529238s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 10;
Batch 10 took: 10.89140054s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 11;
Batch 11 took: 10.741756461s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 12;
Batch 12 took: 11.74157627s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 13;
Batch 13 took: 10.765255197s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 14;
Batch 14 took: 10.992414756s.
INSERT INTO bottom_level(x, y, z, hash_key, cluster_agg, cx, cy) SELECT x, y, z, get_citus_spatial_hash_key(cx, cy), '{"count(*)":1}', cx, cy FROM dots WHERE mod(hash_key, 16) = 15;
Batch 15 took: 10.802742222s.

************************************************
Populating bottom_level took: 178.105340492s.
************************************************

Creating the PLV8 UDF for single node clustering algo...
Creating single_node_clustering_algo on master:
CREATE OR REPLACE FUNCTION single_node_clustering_algo(shard text, autodd jsonb) returns int AS $$ 

    function initClusterAgg(d) {
        d.cluster_agg = JSON.parse(d.cluster_agg);
        ret = d.cluster_agg;
        if (Object.keys(ret).length > 1) {
            // not only count(*), and thus not bottom level
            // just scale the convex hull
            for (var i = 0; i < ret.convexHull.length; i++) {
                ret.convexHull[i][0] /= zoomFactor;
                ret.convexHull[i][1] /= zoomFactor;
            }
            return;
        }

        // convex hull
        ret.convexHull = [[d.cx, d.cy]];

        // topk
        if (topk > 0) {
            var dd = {};
            for (var i = 0; i < fields.length; i++) {
                if (
                    fields[i] == "hash_key" ||
                    fields[i] == "minx" ||
                    fields[i] == "miny" ||
                    fields[i] == "maxx" ||
                    fields[i] == "maxy" ||
                    fields[i] == "cluster_agg" ||
                    fields[i] == "cx" ||
                    fields[i] == "cy" ||
                    fields[i] == "centroid"
                )
                    continue;
                dd[fields[i]] = d[fields[i]];
            }
            ret.topk = [dd];
        } else ret.topk = [];

        // for NNM experiment
        ret.xysqrsum = d[xCol] * d[xCol] + d[yCol] * d[yCol];
        ret.sumX = +d[xCol];
        ret.sumY = +d[yCol];

        // numerical aggregations
        var dimStr = "";
        for (var i = 0; i < aggDimensionFields.length; i++)
            dimStr += (i > 0 ? aggKeyDelimiter : "") + d[aggDimensionFields[i]];
        // always calculate count(*)
        ret[dimStr + aggKeyDelimiter + "count(*)"] = 1;
        for (var i = 0; i < aggMeasureFields.length; i++) {
            var curField = aggMeasureFields[i];
            if (curField == "*") continue;
            var curValue = d[curField];
            ret[dimStr + aggKeyDelimiter + "sum(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "max(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "min(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "sqrsum(" + curField + ")"] =
                curValue * curValue;
        }
    }

    // get d3
    if (!("d3" in plv8)) plv8.d3 = require("d3");
    var d3 = plv8.d3;

    // get merge cluster function
    if (!("mergeClusterAggs" in plv8))
        plv8.mergeClusterAggs = function mergeClusterAggs(a, b) {
    // count(*)
    a["count(*)"] += b["count(*)"];

    // convex hulls
    for (var i = 0; i < b.convexHull.length; i++)
        a.convexHull.push(b.convexHull[i]);
    if (a.convexHull.length >= 3) a.convexHull = d3.polygonHull(a.convexHull);

    // topk
    for (var i = 0; i < b.topk.length; i++) a.topk.push(b.topk[i]);
    if (zCol != "none")
        a.topk.sort(function(p, q) {
            if (zOrder == "asc") return p[zCol] < q[zCol] ? -1 : 1;
            else return p[zCol] > q[zCol] ? -1 : 1;
        });
    var extra = Math.max(a.topk.length - topk, 0);
    for (var i = 0; i < extra; i++) a.topk.pop();
    //a.topk = a.topk.slice(0, topk);

    // NNM experiments
    a.xysqrsum += b.xysqrsum;
    a.sumX += b.sumX;
    a.sumY += b.sumY;

    // numeric aggregations
    bKeys = Object.keys(b);
    for (var i = 0; i < bKeys.length; i++) {
        var aggKey = bKeys[i];
        if (
            aggKey == "count(*)" ||
            aggKey == "topk" ||
            aggKey == "convexHull" ||
            aggKey == "xysqrsum" ||
            aggKey == "sumX" ||
            aggKey == "sumY"
        )
            continue;
        if (!(aggKey in a)) {
            a[aggKey] = b[aggKey];
            continue;
        }
        var func = aggKey.substring(
            aggKey.lastIndexOf(aggKeyDelimiter) + aggKeyDelimiter.length,
            aggKey.lastIndexOf("(")
        );
        var aValue = a[aggKey],
            bValue = b[aggKey];
        switch (func) {
            case "count":
            case "sum":
            case "sqrsum":
                a[aggKey] = aValue + bValue;
                break;
            case "min":
                a[aggKey] = Math.min(aValue, bValue);
                break;
            case "max":
                a[aggKey] = Math.max(aValue, bValue);
                break;
        }
    }
};
    var mergeClusterAggs = plv8.mergeClusterAggs;

    // fetch in queries
    var xCol = autodd.xCol;
    var yCol = autodd.yCol;
    var zOrder = autodd.zOrder;
    var zCol = autodd.zCol;
    var fields = autodd.fields;
    var types = autodd.types;
    var sql =
        "SELECT * FROM " +
        shard +
        (zCol != "none" ? " ORDER BY " + zCol + " " + zOrder : "") +
        ";";
    var plan = plv8.prepare(sql);
    var cursor = plan.cursor();

    // initialize a quadtree for existing clusters
    var zoomFactor = autodd.zoomFactor;
    var theta = autodd.theta;
    var bboxH = autodd.bboxH,
        bboxW = autodd.bboxW;
    var topk = autodd.topk;
    var aggKeyDelimiter = autodd.aggKeyDelimiter;
    var aggDimensionFields = autodd.aggDimensionFields;
    var aggMeasureFields = autodd.aggMeasureFields;
    var qt = d3
        .quadtree()
        .x(function x(d) {
            return d.cx;
        })
        .y(function y(d) {
            return d.cy;
        });
    var cluster;
    //    var cnt = 0;
    while ((cluster = cursor.fetch())) {
        //        cnt ++;
        //        if (cnt % 1000 == 0)
        //            plv8.elog(NOTICE, cnt + " " + qt.size() + " " + qt.extent());

        cluster.cx /= zoomFactor;
        cluster.cy /= zoomFactor;
        initClusterAgg(cluster);

        var x0 = cluster.cx - bboxW,
            x3 = cluster.cx + bboxW;
        var y0 = cluster.cy - bboxH,
            y3 = cluster.cy + bboxH;
        var nn = null,
            minNcd = -1;
        qt.visit(function(node, x1, y1, x2, y2) {
            if (!node.length) {
                do {
                    var d = node.data;
                    var ncd = d3.max([
                        Math.abs(cluster.cx - d.cx) / bboxW,
                        Math.abs(cluster.cy - d.cy) / bboxH
                    ]);
                    if (ncd <= theta)
                        if (nn == null || ncd < minNcd)
                            (nn = d), (minNcd = ncd);
                } while ((node = node.next));
            }
            return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;
        });

        if (nn != null)
            // merge cluster
            mergeClusterAggs(nn.cluster_agg, cluster.cluster_agg);
        else qt.add(cluster);
    }
    cursor.close();
    plan.free();
    plv8.elog(NOTICE, "QT TREE DONE!!!!");

    // use batch insert to put data into the correct table
    var newClusters = qt.data();
    var batchSize = 3000;
    var targetTable = autodd.tableMap[shard];
    sql = "";
    for (var i = 0; i < newClusters.length; i++) {
        if (i % batchSize == 0) {
            if (sql.length > 0) {
                // plv8.elog(NOTICE, sql.length);
                plv8.execute(sql);
            }
            sql = "INSERT INTO " + targetTable + "(";
            for (var j = 0; j < fields.length; j++)
                sql += (j > 0 ? ", " : "") + fields[j];
            sql += ") VALUES ";
        }
        sql += (i % batchSize > 0 ? ", " : "") + "(";
        for (var j = 0; j < fields.length; j++) {
            sql += j > 0 ? ", " : "";
            var curValue = newClusters[i][fields[j]];
            if (types[j] == "int4" || types[j] == "float4") sql += curValue;
            else {
                if (fields[j] == "cluster_agg")
                    curValue = JSON.stringify(curValue);
                if (typeof curValue == "string")
                    curValue = curValue.replace(/\'/g, "''");
                sql += "'" + curValue + "'::" + types[j];
            }
        }
        sql += ")";
    }
    if (sql.length > 0) plv8.execute(sql);

    var ret = newClusters.length;
    qt = null;
    newClusters = null;
    return ret;

$$ LANGUAGE plv8 STABLE;
Creating single_node_clustering_algo on workers:
SELECT run_command_on_workers($cmd$ CREATE OR REPLACE FUNCTION single_node_clustering_algo(shard text, autodd jsonb) returns int AS $$ 

    function initClusterAgg(d) {
        d.cluster_agg = JSON.parse(d.cluster_agg);
        ret = d.cluster_agg;
        if (Object.keys(ret).length > 1) {
            // not only count(*), and thus not bottom level
            // just scale the convex hull
            for (var i = 0; i < ret.convexHull.length; i++) {
                ret.convexHull[i][0] /= zoomFactor;
                ret.convexHull[i][1] /= zoomFactor;
            }
            return;
        }

        // convex hull
        ret.convexHull = [[d.cx, d.cy]];

        // topk
        if (topk > 0) {
            var dd = {};
            for (var i = 0; i < fields.length; i++) {
                if (
                    fields[i] == "hash_key" ||
                    fields[i] == "minx" ||
                    fields[i] == "miny" ||
                    fields[i] == "maxx" ||
                    fields[i] == "maxy" ||
                    fields[i] == "cluster_agg" ||
                    fields[i] == "cx" ||
                    fields[i] == "cy" ||
                    fields[i] == "centroid"
                )
                    continue;
                dd[fields[i]] = d[fields[i]];
            }
            ret.topk = [dd];
        } else ret.topk = [];

        // for NNM experiment
        ret.xysqrsum = d[xCol] * d[xCol] + d[yCol] * d[yCol];
        ret.sumX = +d[xCol];
        ret.sumY = +d[yCol];

        // numerical aggregations
        var dimStr = "";
        for (var i = 0; i < aggDimensionFields.length; i++)
            dimStr += (i > 0 ? aggKeyDelimiter : "") + d[aggDimensionFields[i]];
        // always calculate count(*)
        ret[dimStr + aggKeyDelimiter + "count(*)"] = 1;
        for (var i = 0; i < aggMeasureFields.length; i++) {
            var curField = aggMeasureFields[i];
            if (curField == "*") continue;
            var curValue = d[curField];
            ret[dimStr + aggKeyDelimiter + "sum(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "max(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "min(" + curField + ")"] = +curValue;
            ret[dimStr + aggKeyDelimiter + "sqrsum(" + curField + ")"] =
                curValue * curValue;
        }
    }

    // get d3
    if (!("d3" in plv8)) plv8.d3 = require("d3");
    var d3 = plv8.d3;

    // get merge cluster function
    if (!("mergeClusterAggs" in plv8))
        plv8.mergeClusterAggs = function mergeClusterAggs(a, b) {
    // count(*)
    a["count(*)"] += b["count(*)"];

    // convex hulls
    for (var i = 0; i < b.convexHull.length; i++)
        a.convexHull.push(b.convexHull[i]);
    if (a.convexHull.length >= 3) a.convexHull = d3.polygonHull(a.convexHull);

    // topk
    for (var i = 0; i < b.topk.length; i++) a.topk.push(b.topk[i]);
    if (zCol != "none")
        a.topk.sort(function(p, q) {
            if (zOrder == "asc") return p[zCol] < q[zCol] ? -1 : 1;
            else return p[zCol] > q[zCol] ? -1 : 1;
        });
    var extra = Math.max(a.topk.length - topk, 0);
    for (var i = 0; i < extra; i++) a.topk.pop();
    //a.topk = a.topk.slice(0, topk);

    // NNM experiments
    a.xysqrsum += b.xysqrsum;
    a.sumX += b.sumX;
    a.sumY += b.sumY;

    // numeric aggregations
    bKeys = Object.keys(b);
    for (var i = 0; i < bKeys.length; i++) {
        var aggKey = bKeys[i];
        if (
            aggKey == "count(*)" ||
            aggKey == "topk" ||
            aggKey == "convexHull" ||
            aggKey == "xysqrsum" ||
            aggKey == "sumX" ||
            aggKey == "sumY"
        )
            continue;
        if (!(aggKey in a)) {
            a[aggKey] = b[aggKey];
            continue;
        }
        var func = aggKey.substring(
            aggKey.lastIndexOf(aggKeyDelimiter) + aggKeyDelimiter.length,
            aggKey.lastIndexOf("(")
        );
        var aValue = a[aggKey],
            bValue = b[aggKey];
        switch (func) {
            case "count":
            case "sum":
            case "sqrsum":
                a[aggKey] = aValue + bValue;
                break;
            case "min":
                a[aggKey] = Math.min(aValue, bValue);
                break;
            case "max":
                a[aggKey] = Math.max(aValue, bValue);
                break;
        }
    }
};
    var mergeClusterAggs = plv8.mergeClusterAggs;

    // fetch in queries
    var xCol = autodd.xCol;
    var yCol = autodd.yCol;
    var zOrder = autodd.zOrder;
    var zCol = autodd.zCol;
    var fields = autodd.fields;
    var types = autodd.types;
    var sql =
        "SELECT * FROM " +
        shard +
        (zCol != "none" ? " ORDER BY " + zCol + " " + zOrder : "") +
        ";";
    var plan = plv8.prepare(sql);
    var cursor = plan.cursor();

    // initialize a quadtree for existing clusters
    var zoomFactor = autodd.zoomFactor;
    var theta = autodd.theta;
    var bboxH = autodd.bboxH,
        bboxW = autodd.bboxW;
    var topk = autodd.topk;
    var aggKeyDelimiter = autodd.aggKeyDelimiter;
    var aggDimensionFields = autodd.aggDimensionFields;
    var aggMeasureFields = autodd.aggMeasureFields;
    var qt = d3
        .quadtree()
        .x(function x(d) {
            return d.cx;
        })
        .y(function y(d) {
            return d.cy;
        });
    var cluster;
    //    var cnt = 0;
    while ((cluster = cursor.fetch())) {
        //        cnt ++;
        //        if (cnt % 1000 == 0)
        //            plv8.elog(NOTICE, cnt + " " + qt.size() + " " + qt.extent());

        cluster.cx /= zoomFactor;
        cluster.cy /= zoomFactor;
        initClusterAgg(cluster);

        var x0 = cluster.cx - bboxW,
            x3 = cluster.cx + bboxW;
        var y0 = cluster.cy - bboxH,
            y3 = cluster.cy + bboxH;
        var nn = null,
            minNcd = -1;
        qt.visit(function(node, x1, y1, x2, y2) {
            if (!node.length) {
                do {
                    var d = node.data;
                    var ncd = d3.max([
                        Math.abs(cluster.cx - d.cx) / bboxW,
                        Math.abs(cluster.cy - d.cy) / bboxH
                    ]);
                    if (ncd <= theta)
                        if (nn == null || ncd < minNcd)
                            (nn = d), (minNcd = ncd);
                } while ((node = node.next));
            }
            return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;
        });

        if (nn != null)
            // merge cluster
            mergeClusterAggs(nn.cluster_agg, cluster.cluster_agg);
        else qt.add(cluster);
    }
    cursor.close();
    plan.free();
    plv8.elog(NOTICE, "QT TREE DONE!!!!");

    // use batch insert to put data into the correct table
    var newClusters = qt.data();
    var batchSize = 3000;
    var targetTable = autodd.tableMap[shard];
    sql = "";
    for (var i = 0; i < newClusters.length; i++) {
        if (i % batchSize == 0) {
            if (sql.length > 0) {
                // plv8.elog(NOTICE, sql.length);
                plv8.execute(sql);
            }
            sql = "INSERT INTO " + targetTable + "(";
            for (var j = 0; j < fields.length; j++)
                sql += (j > 0 ? ", " : "") + fields[j];
            sql += ") VALUES ";
        }
        sql += (i % batchSize > 0 ? ", " : "") + "(";
        for (var j = 0; j < fields.length; j++) {
            sql += j > 0 ? ", " : "";
            var curValue = newClusters[i][fields[j]];
            if (types[j] == "int4" || types[j] == "float4") sql += curValue;
            else {
                if (fields[j] == "cluster_agg")
                    curValue = JSON.stringify(curValue);
                if (typeof curValue == "string")
                    curValue = curValue.replace(/\'/g, "''");
                sql += "'" + curValue + "'::" + types[j];
            }
        }
        sql += ")";
    }
    if (sql.length > 0) plv8.execute(sql);

    var ret = newClusters.length;
    qt = null;
    newClusters = null;
    return ret;

$$ LANGUAGE plv8 $cmd$);
Creating the PLV8 UDF for merging clusters along splits...
Creating merge_clusters_along_splits on master:
CREATE OR REPLACE FUNCTION merge_clusters_along_splits(clusters jsonb[], autodd jsonb) returns setof jsonb AS $$ 

    // get d3
    if (!("d3" in plv8)) plv8.d3 = require("d3");
    var d3 = plv8.d3;

    // get merge cluster function
    if (!("mergeClusterAggs" in plv8))
        plv8.mergeClusterAggs = function mergeClusterAggs(a, b) {
    // count(*)
    a["count(*)"] += b["count(*)"];

    // convex hulls
    for (var i = 0; i < b.convexHull.length; i++)
        a.convexHull.push(b.convexHull[i]);
    if (a.convexHull.length >= 3) a.convexHull = d3.polygonHull(a.convexHull);

    // topk
    for (var i = 0; i < b.topk.length; i++) a.topk.push(b.topk[i]);
    if (zCol != "none")
        a.topk.sort(function(p, q) {
            if (zOrder == "asc") return p[zCol] < q[zCol] ? -1 : 1;
            else return p[zCol] > q[zCol] ? -1 : 1;
        });
    var extra = Math.max(a.topk.length - topk, 0);
    for (var i = 0; i < extra; i++) a.topk.pop();
    //a.topk = a.topk.slice(0, topk);

    // NNM experiments
    a.xysqrsum += b.xysqrsum;
    a.sumX += b.sumX;
    a.sumY += b.sumY;

    // numeric aggregations
    bKeys = Object.keys(b);
    for (var i = 0; i < bKeys.length; i++) {
        var aggKey = bKeys[i];
        if (
            aggKey == "count(*)" ||
            aggKey == "topk" ||
            aggKey == "convexHull" ||
            aggKey == "xysqrsum" ||
            aggKey == "sumX" ||
            aggKey == "sumY"
        )
            continue;
        if (!(aggKey in a)) {
            a[aggKey] = b[aggKey];
            continue;
        }
        var func = aggKey.substring(
            aggKey.lastIndexOf(aggKeyDelimiter) + aggKeyDelimiter.length,
            aggKey.lastIndexOf("(")
        );
        var aValue = a[aggKey],
            bValue = b[aggKey];
        switch (func) {
            case "count":
            case "sum":
            case "sqrsum":
                a[aggKey] = aValue + bValue;
                break;
            case "min":
                a[aggKey] = Math.min(aValue, bValue);
                break;
            case "max":
                a[aggKey] = Math.max(aValue, bValue);
                break;
        }
    }
};
    var mergeClusterAggs = plv8.mergeClusterAggs;

    var theta = autodd.theta;
    var zCol = autodd.zCol;
    var zOrder = autodd.zOrder;
    var bboxW = autodd.bboxW;
    var bboxH = autodd.bboxH;
    var topk = autodd.topk;
    var dir = autodd.splitDir;
    var aggKeyDelimiter = autodd.aggKeyDelimiter;

    clusters.sort(function(a, b) {
        if (dir == "vertical") return a.cy - b.cy;
        else return a.cx - b.cx;
    });

    var res = [JSON.parse(JSON.stringify(clusters[0]))];
    for (var i = 1; i < clusters.length; i++) {
        var cur = clusters[i];
        var last = res[res.length - 1];
        var ncd = Math.max(
            Math.abs(last.cx - cur.cx) / bboxW,
            Math.abs(last.cy - cur.cy) / bboxH
        );
        if (ncd >= theta)
            // no conflict
            res.push(JSON.parse(JSON.stringify(cur)));
        else {
            // merge last and cur
            var lastClusterAgg = JSON.parse(last.cluster_agg);
            var curClusterAgg = JSON.parse(cur.cluster_agg);

            // merge according to importance order
            if (
                (zCol == "none" &&
                    lastClusterAgg["count(*)"] >= curClusterAgg["count(*)"]) ||
                (zCol != "none" &&
                    last[zCol] > cur[zCol] &&
                    zOrder == "desc") ||
                (zCol != "none" && last[zCol] < cur[zCol] && zOrder == "asc")
            ) {
                mergeClusterAggs(lastClusterAgg, curClusterAgg);
                last.cluster_agg = JSON.stringify(lastClusterAgg);
            } else {
                mergeClusterAggs(curClusterAgg, lastClusterAgg);
                cur.cluster_agg = JSON.stringify(curClusterAgg);
                res[res.length - 1] = JSON.parse(JSON.stringify(cur));
            }
        }
    }

    return res;

$$ LANGUAGE plv8 STABLE;
Running single_node_clustering_algo across all shards for level10...
SELECT run_command_on_shards('bottom_level', $$ SELECT single_node_clustering_algo('%1$s', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":9765625.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"bottom_level_102053" : "l10_102085", "bottom_level_102041" : "l10_102073", "bottom_level_102064" : "l10_102096", "bottom_level_102055" : "l10_102087", "bottom_level_102048" : "l10_102080", "bottom_level_102046" : "l10_102078", "bottom_level_102060" : "l10_102092", "bottom_level_102040" : "l10_102072", "bottom_level_102068" : "l10_102100", "bottom_level_102044" : "l10_102076", "bottom_level_102070" : "l10_102102", "bottom_level_102063" : "l10_102095", "bottom_level_102050" : "l10_102082", "bottom_level_102049" : "l10_102081", "bottom_level_102071" : "l10_102103", "bottom_level_102061" : "l10_102093", "bottom_level_102069" : "l10_102101", "bottom_level_102043" : "l10_102075", "bottom_level_102065" : "l10_102097", "bottom_level_102059" : "l10_102091", "bottom_level_102042" : "l10_102074", "bottom_level_102052" : "l10_102084", "bottom_level_102054" : "l10_102086", "bottom_level_102062" : "l10_102094", "bottom_level_102067" : "l10_102099", "bottom_level_102045" : "l10_102077", "bottom_level_102047" : "l10_102079", "bottom_level_102056" : "l10_102088", "bottom_level_102066" : "l10_102098", "bottom_level_102057" : "l10_102089", "bottom_level_102051" : "l10_102083", "bottom_level_102058" : "l10_102090"}}'::jsonb)$$);

************************************************
Running single node clustering in parallel took: 118.593507109s.
************************************************

(102040,t,266478)
(102041,t,266484)
(102042,t,269780)
(102043,t,270202)
(102044,t,266205)
(102045,t,266007)
(102046,t,266001)
(102047,t,266025)
(102048,t,266170)
(102049,t,266353)
(102050,t,266148)
(102051,t,1411186)
(102052,t,269776)
(102053,t,266356)
(102054,t,269619)
(102055,t,265998)
(102056,t,266177)
(102057,t,1402717)
(102058,t,1411204)
(102059,t,269433)
(102060,t,266414)
(102061,t,266293)
(102062,t,269848)
(102063,t,266314)
(102064,t,266391)
(102065,t,269687)
(102066,t,1259357)
(102067,t,266257)
(102068,t,266352)
(102069,t,269893)
(102070,t,266200)
(102071,t,266288)

Building spatial indexes on level10...
UPDATE l10 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 4.900345089s.
DROP INDEX IF EXISTS l10_centroid_gist;
Drop existing index on centroid took: 0.006267615s.
CREATE INDEX l10_centroid_gist ON l10 USING gist(centroid);
Creating gist index on centroid took: 24.291994756s.


Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.08515625E12, maxy=9.3E12, splitDir=VERTICAL, count=3987531, splitPoint=8.92578125E11}
SELECT count(*) FROM l10 WHERE centroid <@ box('91260.0, 71680.0, 91540.0, 952320.0');
# objects along this split: 4805
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('91260.0, 71680.0, 91540.0, 952320.0');
Creating merge_table took: 1.754545334s.
DELETE FROM l10 WHERE centroid <@ box('91260.0, 71680.0, 91540.0, 952320.0');
Deleting border clusters took : 0.970250067s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3436 new clusters inserted back.
Running merge_clusters_along_splits took : 1.362083859s.

Current KD-tree: KDTree{minx=1.08515625E12, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=3988766, splitPoint=1.277734375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('130700.0, 71680.0, 130980.0, 952320.0');
# objects along this split: 4725
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('130700.0, 71680.0, 130980.0, 952320.0');
Creating merge_table took: 1.657508641s.
DELETE FROM l10 WHERE centroid <@ box('130700.0, 71680.0, 130980.0, 952320.0');
Deleting border clusters took : 1.034581305s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3348 new clusters inserted back.
Running merge_clusters_along_splits took : 1.180268393s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=7976297, splitPoint=1.08515625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('110980.0, 71680.0, 111260.0, 952320.0');
# objects along this split: 4733
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('110980.0, 71680.0, 111260.0, 952320.0');
Creating merge_table took: 1.816294294s.
DELETE FROM l10 WHERE centroid <@ box('110980.0, 71680.0, 111260.0, 952320.0');
Deleting border clusters took : 1.247622566s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3423 new clusters inserted back.
Running merge_clusters_along_splits took : 0.881374703s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=1.85546875E12, maxy=9.3E12, splitDir=VERTICAL, count=3987311, splitPoint=1.662890625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('170140.0, 71680.0, 170420.0, 952320.0');
# objects along this split: 4735
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('170140.0, 71680.0, 170420.0, 952320.0');
Creating merge_table took: 0.041551872s.
DELETE FROM l10 WHERE centroid <@ box('170140.0, 71680.0, 170420.0, 952320.0');
Deleting border clusters took : 1.110577744s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3438 new clusters inserted back.
Running merge_clusters_along_splits took : 0.212974315s.

Current KD-tree: KDTree{minx=1.85546875E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=3989715, splitPoint=2.048046875E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('209580.0, 71680.0, 209860.0, 952320.0');
# objects along this split: 4775
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('209580.0, 71680.0, 209860.0, 952320.0');
Creating merge_table took: 0.058620483s.
DELETE FROM l10 WHERE centroid <@ box('209580.0, 71680.0, 209860.0, 952320.0');
Deleting border clusters took : 0.432691687s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3431 new clusters inserted back.
Running merge_clusters_along_splits took : 0.234405383s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=7977026, splitPoint=1.85546875E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('189860.0, 71680.0, 190140.0, 952320.0');
# objects along this split: 4706
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('189860.0, 71680.0, 190140.0, 952320.0');
Creating merge_table took: 0.038802668s.
DELETE FROM l10 WHERE centroid <@ box('189860.0, 71680.0, 190140.0, 952320.0');
Deleting border clusters took : 0.011622455s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3389 new clusters inserted back.
Running merge_clusters_along_splits took : 0.213133956s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=15953323, splitPoint=1.4703125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('150420.0, 71680.0, 150700.0, 952320.0');
# objects along this split: 4725
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('150420.0, 71680.0, 150700.0, 952320.0');
Creating merge_table took: 0.045392569s.
DELETE FROM l10 WHERE centroid <@ box('150420.0, 71680.0, 150700.0, 952320.0');
Deleting border clusters took : 0.011150201s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3414 new clusters inserted back.
Running merge_clusters_along_splits took : 0.207978127s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=2.62578125E12, maxy=9.3E12, splitDir=VERTICAL, count=3987807, splitPoint=2.433203125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('249020.0, 71680.0, 249300.0, 952320.0');
# objects along this split: 4759
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('249020.0, 71680.0, 249300.0, 952320.0');
Creating merge_table took: 0.061669972s.
DELETE FROM l10 WHERE centroid <@ box('249020.0, 71680.0, 249300.0, 952320.0');
Deleting border clusters took : 0.015863964s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3438 new clusters inserted back.
Running merge_clusters_along_splits took : 0.216694994s.

Current KD-tree: KDTree{minx=2.62578125E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=3988487, splitPoint=2.818359375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('288460.0, 71680.0, 288740.0, 952320.0');
# objects along this split: 4753
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('288460.0, 71680.0, 288740.0, 952320.0');
Creating merge_table took: 0.03461248s.
DELETE FROM l10 WHERE centroid <@ box('288460.0, 71680.0, 288740.0, 952320.0');
Deleting border clusters took : 0.009966962s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3474 new clusters inserted back.
Running merge_clusters_along_splits took : 0.217543884s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=7976294, splitPoint=2.62578125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('268740.0, 71680.0, 269020.0, 952320.0');
# objects along this split: 4779
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('268740.0, 71680.0, 269020.0, 952320.0');
Creating merge_table took: 0.036155915s.
DELETE FROM l10 WHERE centroid <@ box('268740.0, 71680.0, 269020.0, 952320.0');
Deleting border clusters took : 0.01050906s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3427 new clusters inserted back.
Running merge_clusters_along_splits took : 0.217256937s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.39609375E12, maxy=9.3E12, splitDir=VERTICAL, count=3986088, splitPoint=3.203515625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('327900.0, 71680.0, 328180.0, 952320.0');
# objects along this split: 4671
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('327900.0, 71680.0, 328180.0, 952320.0');
Creating merge_table took: 0.040598618s.
DELETE FROM l10 WHERE centroid <@ box('327900.0, 71680.0, 328180.0, 952320.0');
Deleting border clusters took : 0.011213287s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3388 new clusters inserted back.
Running merge_clusters_along_splits took : 0.203858544s.

Current KD-tree: KDTree{minx=3.39609375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=3986092, splitPoint=3.588671875E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('367340.0, 71680.0, 367620.0, 952320.0');
# objects along this split: 4689
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('367340.0, 71680.0, 367620.0, 952320.0');
Creating merge_table took: 0.035359748s.
DELETE FROM l10 WHERE centroid <@ box('367340.0, 71680.0, 367620.0, 952320.0');
Deleting border clusters took : 0.011053781s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3359 new clusters inserted back.
Running merge_clusters_along_splits took : 0.523487168s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=7972180, splitPoint=3.39609375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('347620.0, 71680.0, 347900.0, 952320.0');
# objects along this split: 4740
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('347620.0, 71680.0, 347900.0, 952320.0');
Creating merge_table took: 0.039798823s.
DELETE FROM l10 WHERE centroid <@ box('347620.0, 71680.0, 347900.0, 952320.0');
Deleting border clusters took : 0.012243262s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3397 new clusters inserted back.
Running merge_clusters_along_splits took : 0.214977615s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=15948474, splitPoint=3.0109375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('308180.0, 71680.0, 308460.0, 952320.0');
# objects along this split: 4714
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('308180.0, 71680.0, 308460.0, 952320.0');
Creating merge_table took: 0.038432794s.
DELETE FROM l10 WHERE centroid <@ box('308180.0, 71680.0, 308460.0, 952320.0');
Deleting border clusters took : 0.011279058s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3418 new clusters inserted back.
Running merge_clusters_along_splits took : 0.213859595s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=31901797, splitPoint=2.240625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('229300.0, 71680.0, 229580.0, 952320.0');
# objects along this split: 4752
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('229300.0, 71680.0, 229580.0, 952320.0');
Creating merge_table took: 0.062339255s.
DELETE FROM l10 WHERE centroid <@ box('229300.0, 71680.0, 229580.0, 952320.0');
Deleting border clusters took : 0.015363044s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3391 new clusters inserted back.
Running merge_clusters_along_splits took : 0.233334467s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.17159423828125E12, maxy=9.3E12, splitDir=VERTICAL, count=4038882, splitPoint=3.976422119140625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('407045.625, 71680.0, 407325.625, 952320.0');
# objects along this split: 4690
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('407045.625, 71680.0, 407325.625, 952320.0');
Creating merge_table took: 0.036833562s.
DELETE FROM l10 WHERE centroid <@ box('407045.625, 71680.0, 407325.625, 952320.0');
Deleting border clusters took : 0.011338879s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3392 new clusters inserted back.
Running merge_clusters_along_splits took : 0.199285683s.

Current KD-tree: KDTree{minx=4.17159423828125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=4043030, splitPoint=4.366766357421875E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('447016.875, 71680.0, 447296.875, 952320.0');
# objects along this split: 4754
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('447016.875, 71680.0, 447296.875, 952320.0');
Creating merge_table took: 0.037827586s.
DELETE FROM l10 WHERE centroid <@ box('447016.875, 71680.0, 447296.875, 952320.0');
Deleting border clusters took : 0.012224754s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3430 new clusters inserted back.
Running merge_clusters_along_splits took : 0.207977369s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=8081912, splitPoint=4.17159423828125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('427031.25, 71680.0, 427311.25, 952320.0');
# objects along this split: 4761
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('427031.25, 71680.0, 427311.25, 952320.0');
Creating merge_table took: 0.044975861s.
DELETE FROM l10 WHERE centroid <@ box('427031.25, 71680.0, 427311.25, 952320.0');
Deleting border clusters took : 0.012553184s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3435 new clusters inserted back.
Running merge_clusters_along_splits took : 0.226284443s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=4.95228271484375E12, maxy=9.3E12, splitDir=VERTICAL, count=4040219, splitPoint=4.757110595703125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('486988.125, 71680.0, 487268.125, 952320.0');
# objects along this split: 4716
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('486988.125, 71680.0, 487268.125, 952320.0');
Creating merge_table took: 0.037640306s.
DELETE FROM l10 WHERE centroid <@ box('486988.125, 71680.0, 487268.125, 952320.0');
Deleting border clusters took : 0.010238612s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3425 new clusters inserted back.
Running merge_clusters_along_splits took : 0.228119665s.

Current KD-tree: KDTree{minx=4.95228271484375E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=4040571, splitPoint=5.147454833984375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('526959.375, 71680.0, 527239.375, 952320.0');
# objects along this split: 4705
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('526959.375, 71680.0, 527239.375, 952320.0');
Creating merge_table took: 0.05677712s.
DELETE FROM l10 WHERE centroid <@ box('526959.375, 71680.0, 527239.375, 952320.0');
Deleting border clusters took : 0.01367785s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3397 new clusters inserted back.
Running merge_clusters_along_splits took : 0.221624261s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=8080790, splitPoint=4.95228271484375E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('506973.75, 71680.0, 507253.75, 952320.0');
# objects along this split: 4762
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('506973.75, 71680.0, 507253.75, 952320.0');
Creating merge_table took: 0.037931846s.
DELETE FROM l10 WHERE centroid <@ box('506973.75, 71680.0, 507253.75, 952320.0');
Deleting border clusters took : 0.01133611s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3394 new clusters inserted back.
Running merge_clusters_along_splits took : 0.212475214s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=16162702, splitPoint=4.5619384765625E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('467002.5, 71680.0, 467282.5, 952320.0');
# objects along this split: 4710
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('467002.5, 71680.0, 467282.5, 952320.0');
Creating merge_table took: 0.040527748s.
DELETE FROM l10 WHERE centroid <@ box('467002.5, 71680.0, 467282.5, 952320.0');
Deleting border clusters took : 0.010650482s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3403 new clusters inserted back.
Running merge_clusters_along_splits took : 0.227325664s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=5.72751407623291E12, maxy=9.3E12, splitDir=VERTICAL, count=3985210, splitPoint=5.535070514678955E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('566651.220703125, 71680.0, 566931.220703125, 952320.0');
# objects along this split: 4687
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('566651.220703125, 71680.0, 566931.220703125, 952320.0');
Creating merge_table took: 0.040391987s.
DELETE FROM l10 WHERE centroid <@ box('566651.220703125, 71680.0, 566931.220703125, 952320.0');
Deleting border clusters took : 0.011478893s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3367 new clusters inserted back.
Running merge_clusters_along_splits took : 0.208946966s.

Current KD-tree: KDTree{minx=5.72751407623291E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=3987094, splitPoint=5.919957637786865E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('606063.662109375, 71680.0, 606343.662109375, 952320.0');
# objects along this split: 4712
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('606063.662109375, 71680.0, 606343.662109375, 952320.0');
Creating merge_table took: 0.039671781s.
DELETE FROM l10 WHERE centroid <@ box('606063.662109375, 71680.0, 606343.662109375, 952320.0');
Deleting border clusters took : 0.011215873s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3421 new clusters inserted back.
Running merge_clusters_along_splits took : 0.211015151s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=7972304, splitPoint=5.72751407623291E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('586357.44140625, 71680.0, 586637.44140625, 952320.0');
# objects along this split: 4713
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('586357.44140625, 71680.0, 586637.44140625, 952320.0');
Creating merge_table took: 0.042721813s.
DELETE FROM l10 WHERE centroid <@ box('586357.44140625, 71680.0, 586637.44140625, 952320.0');
Deleting border clusters took : 0.013423241s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3356 new clusters inserted back.
Running merge_clusters_along_splits took : 0.208799098s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.007826936841011E13, maxy=9.3E12, splitDir=VERTICAL, count=3991150, splitPoint=7.97140190359205E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('816131.5549278259, 71680.0, 816411.5549278259, 952320.0');
# objects along this split: 1932
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('816131.5549278259, 71680.0, 816411.5549278259, 952320.0');
Creating merge_table took: 0.020772837s.
DELETE FROM l10 WHERE centroid <@ box('816131.5549278259, 71680.0, 816411.5549278259, 952320.0');
Deleting border clusters took : 0.009386028s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1781 new clusters inserted back.
Running merge_clusters_along_splits took : 0.086952194s.

Current KD-tree: KDTree{minx=1.007826936841011E13, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=3971900, splitPoint=1.2189134684205055E13}
SELECT count(*) FROM l10 WHERE centroid <@ box('1248027.3916625977, 71680.0, 1248307.3916625977, 952320.0');
# objects along this split: 1992
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('1248027.3916625977, 71680.0, 1248307.3916625977, 952320.0');
Creating merge_table took: 0.020443485s.
DELETE FROM l10 WHERE centroid <@ box('1248027.3916625977, 71680.0, 1248307.3916625977, 952320.0');
Deleting border clusters took : 0.008445915s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1863 new clusters inserted back.
Running merge_clusters_along_splits took : 0.086911184s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=7963050, splitPoint=1.007826936841011E13}
SELECT count(*) FROM l10 WHERE centroid <@ box('1031874.7833251952, 71680.0, 1032154.7833251952, 952320.0');
# objects along this split: 1921
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('1031874.7833251952, 71680.0, 1032154.7833251952, 952320.0');
Creating merge_table took: 0.020647092s.
DELETE FROM l10 WHERE centroid <@ box('1031874.7833251952, 71680.0, 1032154.7833251952, 952320.0');
Deleting border clusters took : 0.010070862s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1770 new clusters inserted back.
Running merge_clusters_along_splits took : 0.085145331s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=15935354, splitPoint=6.11240119934082E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('625769.8828125, 71680.0, 626049.8828125, 952320.0');
# objects along this split: 4704
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('625769.8828125, 71680.0, 626049.8828125, 952320.0');
Creating merge_table took: 0.037449248s.
DELETE FROM l10 WHERE centroid <@ box('625769.8828125, 71680.0, 626049.8828125, 952320.0');
Deleting border clusters took : 0.011317576s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3447 new clusters inserted back.
Running merge_clusters_along_splits took : 0.213872219s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=32098056, splitPoint=5.342626953125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('546945.0, 71680.0, 547225.0, 952320.0');
# objects along this split: 4790
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('546945.0, 71680.0, 547225.0, 952320.0');
Creating merge_table took: 0.036025071s.
DELETE FROM l10 WHERE centroid <@ box('546945.0, 71680.0, 547225.0, 952320.0');
Deleting border clusters took : 0.01035408s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3475 new clusters inserted back.
Running merge_clusters_along_splits took : 0.229175939s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=63999853, splitPoint=3.78125E12}
SELECT count(*) FROM l10 WHERE centroid <@ box('387060.0, 71680.0, 387340.0, 952320.0');
# objects along this split: 4747
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l10 WHERE centroid <@ box('387060.0, 71680.0, 387340.0, 952320.0');
Creating merge_table took: 0.060525649s.
DELETE FROM l10 WHERE centroid <@ box('387060.0, 71680.0, 387340.0, 952320.0');
Deleting border clusters took : 0.016947915s.
INSERT INTO l10 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
3394 new clusters inserted back.
Running merge_clusters_along_splits took : 0.227202226s.
************************************************
Merge splits took: 22.116278218s.
************************************************
Running single_node_clustering_algo across all shards for level9...
SELECT run_command_on_shards('l10', $$ SELECT single_node_clustering_algo('%1$s', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l10_102085" : "l9_102117", "l10_102073" : "l9_102105", "l10_102096" : "l9_102128", "l10_102087" : "l9_102119", "l10_102080" : "l9_102112", "l10_102078" : "l9_102110", "l10_102092" : "l9_102124", "l10_102072" : "l9_102104", "l10_102100" : "l9_102132", "l10_102076" : "l9_102108", "l10_102102" : "l9_102134", "l10_102095" : "l9_102127", "l10_102082" : "l9_102114", "l10_102081" : "l9_102113", "l10_102103" : "l9_102135", "l10_102093" : "l9_102125", "l10_102101" : "l9_102133", "l10_102075" : "l9_102107", "l10_102097" : "l9_102129", "l10_102091" : "l9_102123", "l10_102074" : "l9_102106", "l10_102084" : "l9_102116", "l10_102086" : "l9_102118", "l10_102094" : "l9_102126", "l10_102099" : "l9_102131", "l10_102077" : "l9_102109", "l10_102079" : "l9_102111", "l10_102088" : "l9_102120", "l10_102098" : "l9_102130", "l10_102089" : "l9_102121", "l10_102083" : "l9_102115", "l10_102090" : "l9_102122"}}'::jsonb)$$);

************************************************
Running single node clustering in parallel took: 66.009905132s.
************************************************

(102072,t,79919)
(102073,t,79731)
(102074,t,80972)
(102075,t,81098)
(102076,t,79793)
(102077,t,79870)
(102078,t,79978)
(102079,t,79742)
(102080,t,79949)
(102081,t,79850)
(102082,t,79800)
(102083,t,718372)
(102084,t,80906)
(102085,t,79882)
(102086,t,80993)
(102087,t,79908)
(102088,t,79788)
(102089,t,719482)
(102090,t,718579)
(102091,t,80878)
(102092,t,80030)
(102093,t,79887)
(102094,t,80860)
(102095,t,80168)
(102096,t,79789)
(102097,t,80966)
(102098,t,636889)
(102099,t,79825)
(102100,t,79872)
(102101,t,80963)
(102102,t,79692)
(102103,t,79768)

Building spatial indexes on level9...
UPDATE l9 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 1.646574106s.
DROP INDEX IF EXISTS l9_centroid_gist;
Drop existing index on centroid took: 0.003620968s.
CREATE INDEX l9_centroid_gist ON l9 USING gist(centroid);
Creating gist index on centroid took: 9.286337929s.


Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.08515625E12, maxy=9.3E12, splitDir=VERTICAL, count=3987531, splitPoint=8.92578125E11}
SELECT count(*) FROM l9 WHERE centroid <@ box('45560.0, 35840.0, 45840.0, 476160.0');
# objects along this split: 2703
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('45560.0, 35840.0, 45840.0, 476160.0');
Creating merge_table took: 0.042831158s.
DELETE FROM l9 WHERE centroid <@ box('45560.0, 35840.0, 45840.0, 476160.0');
Deleting border clusters took : 1.087309187s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2085 new clusters inserted back.
Running merge_clusters_along_splits took : 0.156365482s.

Current KD-tree: KDTree{minx=1.08515625E12, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=3988766, splitPoint=1.277734375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('65280.0, 35840.0, 65560.0, 476160.0');
# objects along this split: 2743
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('65280.0, 35840.0, 65560.0, 476160.0');
Creating merge_table took: 0.027952283s.
DELETE FROM l9 WHERE centroid <@ box('65280.0, 35840.0, 65560.0, 476160.0');
Deleting border clusters took : 0.54278945s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2096 new clusters inserted back.
Running merge_clusters_along_splits took : 0.150035474s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=7976297, splitPoint=1.08515625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('55420.0, 35840.0, 55700.0, 476160.0');
# objects along this split: 2736
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('55420.0, 35840.0, 55700.0, 476160.0');
Creating merge_table took: 0.02834765s.
DELETE FROM l9 WHERE centroid <@ box('55420.0, 35840.0, 55700.0, 476160.0');
Deleting border clusters took : 0.504292687s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2110 new clusters inserted back.
Running merge_clusters_along_splits took : 0.141088294s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=1.85546875E12, maxy=9.3E12, splitDir=VERTICAL, count=3987311, splitPoint=1.662890625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('85000.0, 35840.0, 85280.0, 476160.0');
# objects along this split: 2777
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('85000.0, 35840.0, 85280.0, 476160.0');
Creating merge_table took: 0.029324995s.
DELETE FROM l9 WHERE centroid <@ box('85000.0, 35840.0, 85280.0, 476160.0');
Deleting border clusters took : 0.372618761s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2127 new clusters inserted back.
Running merge_clusters_along_splits took : 0.802942073s.

Current KD-tree: KDTree{minx=1.85546875E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=3989715, splitPoint=2.048046875E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('104720.0, 35840.0, 105000.0, 476160.0');
# objects along this split: 2789
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('104720.0, 35840.0, 105000.0, 476160.0');
Creating merge_table took: 0.036177617s.
DELETE FROM l9 WHERE centroid <@ box('104720.0, 35840.0, 105000.0, 476160.0');
Deleting border clusters took : 0.587821216s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2142 new clusters inserted back.
Running merge_clusters_along_splits took : 0.152963555s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=7977026, splitPoint=1.85546875E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('94860.0, 35840.0, 95140.0, 476160.0');
# objects along this split: 2750
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('94860.0, 35840.0, 95140.0, 476160.0');
Creating merge_table took: 0.028530804s.
DELETE FROM l9 WHERE centroid <@ box('94860.0, 35840.0, 95140.0, 476160.0');
Deleting border clusters took : 0.341005279s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2111 new clusters inserted back.
Running merge_clusters_along_splits took : 0.349734707s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=15953323, splitPoint=1.4703125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('75140.0, 35840.0, 75420.0, 476160.0');
# objects along this split: 2727
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('75140.0, 35840.0, 75420.0, 476160.0');
Creating merge_table took: 0.028615326s.
DELETE FROM l9 WHERE centroid <@ box('75140.0, 35840.0, 75420.0, 476160.0');
Deleting border clusters took : 0.295785709s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2108 new clusters inserted back.
Running merge_clusters_along_splits took : 1.284962479s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=2.62578125E12, maxy=9.3E12, splitDir=VERTICAL, count=3987807, splitPoint=2.433203125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('124440.0, 35840.0, 124720.0, 476160.0');
# objects along this split: 2733
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('124440.0, 35840.0, 124720.0, 476160.0');
Creating merge_table took: 1.354078579s.
DELETE FROM l9 WHERE centroid <@ box('124440.0, 35840.0, 124720.0, 476160.0');
Deleting border clusters took : 0.623925866s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2095 new clusters inserted back.
Running merge_clusters_along_splits took : 0.484378325s.

Current KD-tree: KDTree{minx=2.62578125E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=3988487, splitPoint=2.818359375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('144160.0, 35840.0, 144440.0, 476160.0');
# objects along this split: 2773
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('144160.0, 35840.0, 144440.0, 476160.0');
Creating merge_table took: 0.028070981s.
DELETE FROM l9 WHERE centroid <@ box('144160.0, 35840.0, 144440.0, 476160.0');
Deleting border clusters took : 0.29203279s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2125 new clusters inserted back.
Running merge_clusters_along_splits took : 0.627384309s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=7976294, splitPoint=2.62578125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('134300.0, 35840.0, 134580.0, 476160.0');
# objects along this split: 2802
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('134300.0, 35840.0, 134580.0, 476160.0');
Creating merge_table took: 0.030408571s.
DELETE FROM l9 WHERE centroid <@ box('134300.0, 35840.0, 134580.0, 476160.0');
Deleting border clusters took : 0.626968159s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2158 new clusters inserted back.
Running merge_clusters_along_splits took : 0.584857314s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.39609375E12, maxy=9.3E12, splitDir=VERTICAL, count=3986088, splitPoint=3.203515625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('163880.0, 35840.0, 164160.0, 476160.0');
# objects along this split: 2763
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('163880.0, 35840.0, 164160.0, 476160.0');
Creating merge_table took: 0.029209546s.
DELETE FROM l9 WHERE centroid <@ box('163880.0, 35840.0, 164160.0, 476160.0');
Deleting border clusters took : 0.591756769s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2144 new clusters inserted back.
Running merge_clusters_along_splits took : 0.866910935s.

Current KD-tree: KDTree{minx=3.39609375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=3986092, splitPoint=3.588671875E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('183600.0, 35840.0, 183880.0, 476160.0');
# objects along this split: 2731
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('183600.0, 35840.0, 183880.0, 476160.0');
Creating merge_table took: 0.028660232s.
DELETE FROM l9 WHERE centroid <@ box('183600.0, 35840.0, 183880.0, 476160.0');
Deleting border clusters took : 0.598309028s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2092 new clusters inserted back.
Running merge_clusters_along_splits took : 0.129238378s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=7972180, splitPoint=3.39609375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('173740.0, 35840.0, 174020.0, 476160.0');
# objects along this split: 2744
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('173740.0, 35840.0, 174020.0, 476160.0');
Creating merge_table took: 0.036093608s.
DELETE FROM l9 WHERE centroid <@ box('173740.0, 35840.0, 174020.0, 476160.0');
Deleting border clusters took : 0.010470523s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2138 new clusters inserted back.
Running merge_clusters_along_splits took : 0.126138482s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=15948474, splitPoint=3.0109375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('154020.0, 35840.0, 154300.0, 476160.0');
# objects along this split: 2742
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('154020.0, 35840.0, 154300.0, 476160.0');
Creating merge_table took: 0.026967829s.
DELETE FROM l9 WHERE centroid <@ box('154020.0, 35840.0, 154300.0, 476160.0');
Deleting border clusters took : 0.008832132s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2067 new clusters inserted back.
Running merge_clusters_along_splits took : 0.131518276s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=31901797, splitPoint=2.240625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('114580.0, 35840.0, 114860.0, 476160.0');
# objects along this split: 2721
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('114580.0, 35840.0, 114860.0, 476160.0');
Creating merge_table took: 0.039451664s.
DELETE FROM l9 WHERE centroid <@ box('114580.0, 35840.0, 114860.0, 476160.0');
Deleting border clusters took : 0.012556115s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2093 new clusters inserted back.
Running merge_clusters_along_splits took : 0.137339224s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.17159423828125E12, maxy=9.3E12, splitDir=VERTICAL, count=4038882, splitPoint=3.976422119140625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('203452.8125, 35840.0, 203732.8125, 476160.0');
# objects along this split: 2693
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('203452.8125, 35840.0, 203732.8125, 476160.0');
Creating merge_table took: 0.026701721s.
DELETE FROM l9 WHERE centroid <@ box('203452.8125, 35840.0, 203732.8125, 476160.0');
Deleting border clusters took : 0.00951757s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2108 new clusters inserted back.
Running merge_clusters_along_splits took : 0.129035073s.

Current KD-tree: KDTree{minx=4.17159423828125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=4043030, splitPoint=4.366766357421875E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('223438.4375, 35840.0, 223718.4375, 476160.0');
# objects along this split: 2763
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('223438.4375, 35840.0, 223718.4375, 476160.0');
Creating merge_table took: 0.029082007s.
DELETE FROM l9 WHERE centroid <@ box('223438.4375, 35840.0, 223718.4375, 476160.0');
Deleting border clusters took : 0.009426137s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2133 new clusters inserted back.
Running merge_clusters_along_splits took : 0.125825235s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=8081912, splitPoint=4.17159423828125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('213445.625, 35840.0, 213725.625, 476160.0');
# objects along this split: 2716
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('213445.625, 35840.0, 213725.625, 476160.0');
Creating merge_table took: 0.027497589s.
DELETE FROM l9 WHERE centroid <@ box('213445.625, 35840.0, 213725.625, 476160.0');
Deleting border clusters took : 0.009746227s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2110 new clusters inserted back.
Running merge_clusters_along_splits took : 0.12993213s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=4.95228271484375E12, maxy=9.3E12, splitDir=VERTICAL, count=4040219, splitPoint=4.757110595703125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('243424.0625, 35840.0, 243704.0625, 476160.0');
# objects along this split: 2730
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('243424.0625, 35840.0, 243704.0625, 476160.0');
Creating merge_table took: 0.0297053s.
DELETE FROM l9 WHERE centroid <@ box('243424.0625, 35840.0, 243704.0625, 476160.0');
Deleting border clusters took : 0.008755899s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2108 new clusters inserted back.
Running merge_clusters_along_splits took : 0.126344906s.

Current KD-tree: KDTree{minx=4.95228271484375E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=4040571, splitPoint=5.147454833984375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('263409.6875, 35840.0, 263689.6875, 476160.0');
# objects along this split: 2700
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('263409.6875, 35840.0, 263689.6875, 476160.0');
Creating merge_table took: 0.034379758s.
DELETE FROM l9 WHERE centroid <@ box('263409.6875, 35840.0, 263689.6875, 476160.0');
Deleting border clusters took : 0.01053368s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2070 new clusters inserted back.
Running merge_clusters_along_splits took : 0.13915706s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=8080790, splitPoint=4.95228271484375E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('253416.875, 35840.0, 253696.875, 476160.0');
# objects along this split: 2780
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('253416.875, 35840.0, 253696.875, 476160.0');
Creating merge_table took: 0.027897625s.
DELETE FROM l9 WHERE centroid <@ box('253416.875, 35840.0, 253696.875, 476160.0');
Deleting border clusters took : 0.008881319s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2134 new clusters inserted back.
Running merge_clusters_along_splits took : 0.133931506s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=16162702, splitPoint=4.5619384765625E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('233431.25, 35840.0, 233711.25, 476160.0');
# objects along this split: 2717
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('233431.25, 35840.0, 233711.25, 476160.0');
Creating merge_table took: 0.026186884s.
DELETE FROM l9 WHERE centroid <@ box('233431.25, 35840.0, 233711.25, 476160.0');
Deleting border clusters took : 0.008792659s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2101 new clusters inserted back.
Running merge_clusters_along_splits took : 0.123857403s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=5.72751407623291E12, maxy=9.3E12, splitDir=VERTICAL, count=3985210, splitPoint=5.535070514678955E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('283255.6103515625, 35840.0, 283535.6103515625, 476160.0');
# objects along this split: 2747
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('283255.6103515625, 35840.0, 283535.6103515625, 476160.0');
Creating merge_table took: 0.027198542s.
DELETE FROM l9 WHERE centroid <@ box('283255.6103515625, 35840.0, 283535.6103515625, 476160.0');
Deleting border clusters took : 0.008713428s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2110 new clusters inserted back.
Running merge_clusters_along_splits took : 0.130966603s.

Current KD-tree: KDTree{minx=5.72751407623291E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=3987094, splitPoint=5.919957637786865E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('302961.8310546875, 35840.0, 303241.8310546875, 476160.0');
# objects along this split: 2705
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('302961.8310546875, 35840.0, 303241.8310546875, 476160.0');
Creating merge_table took: 0.029455304s.
DELETE FROM l9 WHERE centroid <@ box('302961.8310546875, 35840.0, 303241.8310546875, 476160.0');
Deleting border clusters took : 0.008991488s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2079 new clusters inserted back.
Running merge_clusters_along_splits took : 0.128043858s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=7972304, splitPoint=5.72751407623291E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('293108.720703125, 35840.0, 293388.720703125, 476160.0');
# objects along this split: 2737
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('293108.720703125, 35840.0, 293388.720703125, 476160.0');
Creating merge_table took: 0.031722652s.
DELETE FROM l9 WHERE centroid <@ box('293108.720703125, 35840.0, 293388.720703125, 476160.0');
Deleting border clusters took : 0.009309369s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2138 new clusters inserted back.
Running merge_clusters_along_splits took : 0.134800568s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.007826936841011E13, maxy=9.3E12, splitDir=VERTICAL, count=3991150, splitPoint=7.97140190359205E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('407995.77746391296, 35840.0, 408275.77746391296, 476160.0');
# objects along this split: 2180
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('407995.77746391296, 35840.0, 408275.77746391296, 476160.0');
Creating merge_table took: 0.022722082s.
DELETE FROM l9 WHERE centroid <@ box('407995.77746391296, 35840.0, 408275.77746391296, 476160.0');
Deleting border clusters took : 0.008566113s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1821 new clusters inserted back.
Running merge_clusters_along_splits took : 0.091777901s.

Current KD-tree: KDTree{minx=1.007826936841011E13, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=3971900, splitPoint=1.2189134684205055E13}
SELECT count(*) FROM l9 WHERE centroid <@ box('623943.6958312988, 35840.0, 624223.6958312988, 476160.0');
# objects along this split: 2161
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('623943.6958312988, 35840.0, 624223.6958312988, 476160.0');
Creating merge_table took: 0.022894123s.
DELETE FROM l9 WHERE centroid <@ box('623943.6958312988, 35840.0, 624223.6958312988, 476160.0');
Deleting border clusters took : 0.00804446s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1831 new clusters inserted back.
Running merge_clusters_along_splits took : 0.09318226s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=7963050, splitPoint=1.007826936841011E13}
SELECT count(*) FROM l9 WHERE centroid <@ box('515867.3916625976, 35840.0, 516147.3916625976, 476160.0');
# objects along this split: 2136
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('515867.3916625976, 35840.0, 516147.3916625976, 476160.0');
Creating merge_table took: 0.022109295s.
DELETE FROM l9 WHERE centroid <@ box('515867.3916625976, 35840.0, 516147.3916625976, 476160.0');
Deleting border clusters took : 0.008479107s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1768 new clusters inserted back.
Running merge_clusters_along_splits took : 0.093354822s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=15935354, splitPoint=6.11240119934082E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('312814.94140625, 35840.0, 313094.94140625, 476160.0');
# objects along this split: 2751
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('312814.94140625, 35840.0, 313094.94140625, 476160.0');
Creating merge_table took: 0.028494085s.
DELETE FROM l9 WHERE centroid <@ box('312814.94140625, 35840.0, 313094.94140625, 476160.0');
Deleting border clusters took : 0.009528574s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2105 new clusters inserted back.
Running merge_clusters_along_splits took : 0.12610378s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=32098056, splitPoint=5.342626953125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('273402.5, 35840.0, 273682.5, 476160.0');
# objects along this split: 2768
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('273402.5, 35840.0, 273682.5, 476160.0');
Creating merge_table took: 0.027568375s.
DELETE FROM l9 WHERE centroid <@ box('273402.5, 35840.0, 273682.5, 476160.0');
Deleting border clusters took : 0.008733451s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2115 new clusters inserted back.
Running merge_clusters_along_splits took : 0.129536395s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=63999853, splitPoint=3.78125E12}
SELECT count(*) FROM l9 WHERE centroid <@ box('193460.0, 35840.0, 193740.0, 476160.0');
# objects along this split: 2789
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l9 WHERE centroid <@ box('193460.0, 35840.0, 193740.0, 476160.0');
Creating merge_table took: 0.040412905s.
DELETE FROM l9 WHERE centroid <@ box('193460.0, 35840.0, 193740.0, 476160.0');
Deleting border clusters took : 0.012599672s.
INSERT INTO l9 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
2167 new clusters inserted back.
Running merge_clusters_along_splits took : 0.140441145s.
************************************************
Merge splits took: 17.79199999s.
************************************************
Running single_node_clustering_algo across all shards for level8...
SELECT run_command_on_shards('l9', $$ SELECT single_node_clustering_algo('%1$s', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l9_102117" : "l8_102149", "l9_102105" : "l8_102137", "l9_102128" : "l8_102160", "l9_102119" : "l8_102151", "l9_102112" : "l8_102144", "l9_102110" : "l8_102142", "l9_102124" : "l8_102156", "l9_102104" : "l8_102136", "l9_102132" : "l8_102164", "l9_102108" : "l8_102140", "l9_102134" : "l8_102166", "l9_102127" : "l8_102159", "l9_102114" : "l8_102146", "l9_102113" : "l8_102145", "l9_102135" : "l8_102167", "l9_102125" : "l8_102157", "l9_102133" : "l8_102165", "l9_102107" : "l8_102139", "l9_102129" : "l8_102161", "l9_102123" : "l8_102155", "l9_102106" : "l8_102138", "l9_102116" : "l8_102148", "l9_102118" : "l8_102150", "l9_102126" : "l8_102158", "l9_102131" : "l8_102163", "l9_102109" : "l8_102141", "l9_102111" : "l8_102143", "l9_102120" : "l8_102152", "l9_102130" : "l8_102162", "l9_102121" : "l8_102153", "l9_102115" : "l8_102147", "l9_102122" : "l8_102154"}}'::jsonb)$$);

************************************************
Running single node clustering in parallel took: 30.98627302s.
************************************************

(102104,t,22504)
(102105,t,22487)
(102106,t,22844)
(102107,t,22877)
(102108,t,22560)
(102109,t,22481)
(102110,t,22584)
(102111,t,22380)
(102112,t,22470)
(102113,t,22550)
(102114,t,22482)
(102115,t,235817)
(102116,t,22844)
(102117,t,22539)
(102118,t,22804)
(102119,t,22532)
(102120,t,22492)
(102121,t,235360)
(102122,t,236192)
(102123,t,22762)
(102124,t,22526)
(102125,t,22433)
(102126,t,22887)
(102127,t,22482)
(102128,t,22475)
(102129,t,22861)
(102130,t,207676)
(102131,t,22476)
(102132,t,22540)
(102133,t,22887)
(102134,t,22521)
(102135,t,22454)

Building spatial indexes on level8...
UPDATE l8 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.63595314s.
DROP INDEX IF EXISTS l8_centroid_gist;
Drop existing index on centroid took: 0.00132248s.
CREATE INDEX l8_centroid_gist ON l8 USING gist(centroid);
Creating gist index on centroid took: 2.383645965s.


Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.08515625E12, maxy=9.3E12, splitDir=VERTICAL, count=3987531, splitPoint=8.92578125E11}
SELECT count(*) FROM l8 WHERE centroid <@ box('22710.0, 17920.0, 22990.0, 238080.0');
# objects along this split: 1590
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('22710.0, 17920.0, 22990.0, 238080.0');
Creating merge_table took: 0.032927428s.
DELETE FROM l8 WHERE centroid <@ box('22710.0, 17920.0, 22990.0, 238080.0');
Deleting border clusters took : 0.009988593s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1180 new clusters inserted back.
Running merge_clusters_along_splits took : 0.111654931s.

Current KD-tree: KDTree{minx=1.08515625E12, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=3988766, splitPoint=1.277734375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('32570.0, 17920.0, 32850.0, 238080.0');
# objects along this split: 1572
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('32570.0, 17920.0, 32850.0, 238080.0');
Creating merge_table took: 0.020932721s.
DELETE FROM l8 WHERE centroid <@ box('32570.0, 17920.0, 32850.0, 238080.0');
Deleting border clusters took : 0.008157566s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1163 new clusters inserted back.
Running merge_clusters_along_splits took : 0.092787824s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=7976297, splitPoint=1.08515625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('27640.0, 17920.0, 27920.0, 238080.0');
# objects along this split: 1584
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('27640.0, 17920.0, 27920.0, 238080.0');
Creating merge_table took: 0.020352952s.
DELETE FROM l8 WHERE centroid <@ box('27640.0, 17920.0, 27920.0, 238080.0');
Deleting border clusters took : 0.007980238s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1158 new clusters inserted back.
Running merge_clusters_along_splits took : 0.090904115s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=1.85546875E12, maxy=9.3E12, splitDir=VERTICAL, count=3987311, splitPoint=1.662890625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('42430.0, 17920.0, 42710.0, 238080.0');
# objects along this split: 1567
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('42430.0, 17920.0, 42710.0, 238080.0');
Creating merge_table took: 0.020255038s.
DELETE FROM l8 WHERE centroid <@ box('42430.0, 17920.0, 42710.0, 238080.0');
Deleting border clusters took : 0.009042918s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1182 new clusters inserted back.
Running merge_clusters_along_splits took : 0.099436332s.

Current KD-tree: KDTree{minx=1.85546875E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=3989715, splitPoint=2.048046875E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('52290.0, 17920.0, 52570.0, 238080.0');
# objects along this split: 1571
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('52290.0, 17920.0, 52570.0, 238080.0');
Creating merge_table took: 0.027195429s.
DELETE FROM l8 WHERE centroid <@ box('52290.0, 17920.0, 52570.0, 238080.0');
Deleting border clusters took : 0.009646079s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1176 new clusters inserted back.
Running merge_clusters_along_splits took : 0.097980841s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=7977026, splitPoint=1.85546875E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('47360.0, 17920.0, 47640.0, 238080.0');
# objects along this split: 1593
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('47360.0, 17920.0, 47640.0, 238080.0');
Creating merge_table took: 0.019693825s.
DELETE FROM l8 WHERE centroid <@ box('47360.0, 17920.0, 47640.0, 238080.0');
Deleting border clusters took : 0.00820744s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1187 new clusters inserted back.
Running merge_clusters_along_splits took : 0.088743449s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=15953323, splitPoint=1.4703125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('37500.0, 17920.0, 37780.0, 238080.0');
# objects along this split: 1577
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('37500.0, 17920.0, 37780.0, 238080.0');
Creating merge_table took: 0.027540642s.
DELETE FROM l8 WHERE centroid <@ box('37500.0, 17920.0, 37780.0, 238080.0');
Deleting border clusters took : 0.007992754s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1164 new clusters inserted back.
Running merge_clusters_along_splits took : 0.086067549s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=2.62578125E12, maxy=9.3E12, splitDir=VERTICAL, count=3987807, splitPoint=2.433203125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('62150.0, 17920.0, 62430.0, 238080.0');
# objects along this split: 1579
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('62150.0, 17920.0, 62430.0, 238080.0');
Creating merge_table took: 0.027818094s.
DELETE FROM l8 WHERE centroid <@ box('62150.0, 17920.0, 62430.0, 238080.0');
Deleting border clusters took : 0.009978911s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1156 new clusters inserted back.
Running merge_clusters_along_splits took : 0.096003687s.

Current KD-tree: KDTree{minx=2.62578125E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=3988487, splitPoint=2.818359375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('72010.0, 17920.0, 72290.0, 238080.0');
# objects along this split: 1573
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('72010.0, 17920.0, 72290.0, 238080.0');
Creating merge_table took: 0.01857298s.
DELETE FROM l8 WHERE centroid <@ box('72010.0, 17920.0, 72290.0, 238080.0');
Deleting border clusters took : 0.006956297s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1154 new clusters inserted back.
Running merge_clusters_along_splits took : 0.080481909s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=7976294, splitPoint=2.62578125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('67080.0, 17920.0, 67360.0, 238080.0');
# objects along this split: 1586
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('67080.0, 17920.0, 67360.0, 238080.0');
Creating merge_table took: 0.020260371s.
DELETE FROM l8 WHERE centroid <@ box('67080.0, 17920.0, 67360.0, 238080.0');
Deleting border clusters took : 0.007737077s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1168 new clusters inserted back.
Running merge_clusters_along_splits took : 0.080397862s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.39609375E12, maxy=9.3E12, splitDir=VERTICAL, count=3986088, splitPoint=3.203515625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('81870.0, 17920.0, 82150.0, 238080.0');
# objects along this split: 1558
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('81870.0, 17920.0, 82150.0, 238080.0');
Creating merge_table took: 0.018213852s.
DELETE FROM l8 WHERE centroid <@ box('81870.0, 17920.0, 82150.0, 238080.0');
Deleting border clusters took : 0.008217977s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1155 new clusters inserted back.
Running merge_clusters_along_splits took : 0.078955562s.

Current KD-tree: KDTree{minx=3.39609375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=3986092, splitPoint=3.588671875E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('91730.0, 17920.0, 92010.0, 238080.0');
# objects along this split: 1578
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('91730.0, 17920.0, 92010.0, 238080.0');
Creating merge_table took: 0.019219829s.
DELETE FROM l8 WHERE centroid <@ box('91730.0, 17920.0, 92010.0, 238080.0');
Deleting border clusters took : 0.008071112s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1168 new clusters inserted back.
Running merge_clusters_along_splits took : 0.080921772s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=7972180, splitPoint=3.39609375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('86800.0, 17920.0, 87080.0, 238080.0');
# objects along this split: 1579
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('86800.0, 17920.0, 87080.0, 238080.0');
Creating merge_table took: 0.020059923s.
DELETE FROM l8 WHERE centroid <@ box('86800.0, 17920.0, 87080.0, 238080.0');
Deleting border clusters took : 0.008962865s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1162 new clusters inserted back.
Running merge_clusters_along_splits took : 0.083306675s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=15948474, splitPoint=3.0109375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('76940.0, 17920.0, 77220.0, 238080.0');
# objects along this split: 1560
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('76940.0, 17920.0, 77220.0, 238080.0');
Creating merge_table took: 0.026758146s.
DELETE FROM l8 WHERE centroid <@ box('76940.0, 17920.0, 77220.0, 238080.0');
Deleting border clusters took : 0.007807681s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1135 new clusters inserted back.
Running merge_clusters_along_splits took : 0.08016409s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=31901797, splitPoint=2.240625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('57220.0, 17920.0, 57500.0, 238080.0');
# objects along this split: 1557
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('57220.0, 17920.0, 57500.0, 238080.0');
Creating merge_table took: 0.028220352s.
DELETE FROM l8 WHERE centroid <@ box('57220.0, 17920.0, 57500.0, 238080.0');
Deleting border clusters took : 0.010351293s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1147 new clusters inserted back.
Running merge_clusters_along_splits took : 0.093969109s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.17159423828125E12, maxy=9.3E12, splitDir=VERTICAL, count=4038882, splitPoint=3.976422119140625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('101656.40625, 17920.0, 101936.40625, 238080.0');
# objects along this split: 1598
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('101656.40625, 17920.0, 101936.40625, 238080.0');
Creating merge_table took: 0.019892486s.
DELETE FROM l8 WHERE centroid <@ box('101656.40625, 17920.0, 101936.40625, 238080.0');
Deleting border clusters took : 0.007636855s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1178 new clusters inserted back.
Running merge_clusters_along_splits took : 0.082116391s.

Current KD-tree: KDTree{minx=4.17159423828125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=4043030, splitPoint=4.366766357421875E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('111649.21875, 17920.0, 111929.21875, 238080.0');
# objects along this split: 1605
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('111649.21875, 17920.0, 111929.21875, 238080.0');
Creating merge_table took: 0.020137273s.
DELETE FROM l8 WHERE centroid <@ box('111649.21875, 17920.0, 111929.21875, 238080.0');
Deleting border clusters took : 0.007533081s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1170 new clusters inserted back.
Running merge_clusters_along_splits took : 0.088045857s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=8081912, splitPoint=4.17159423828125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('106652.8125, 17920.0, 106932.8125, 238080.0');
# objects along this split: 1582
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('106652.8125, 17920.0, 106932.8125, 238080.0');
Creating merge_table took: 0.01889192s.
DELETE FROM l8 WHERE centroid <@ box('106652.8125, 17920.0, 106932.8125, 238080.0');
Deleting border clusters took : 0.007541775s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1175 new clusters inserted back.
Running merge_clusters_along_splits took : 0.08000236s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=4.95228271484375E12, maxy=9.3E12, splitDir=VERTICAL, count=4040219, splitPoint=4.757110595703125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('121642.03125, 17920.0, 121922.03125, 238080.0');
# objects along this split: 1583
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('121642.03125, 17920.0, 121922.03125, 238080.0');
Creating merge_table took: 0.019257632s.
DELETE FROM l8 WHERE centroid <@ box('121642.03125, 17920.0, 121922.03125, 238080.0');
Deleting border clusters took : 0.007986603s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1169 new clusters inserted back.
Running merge_clusters_along_splits took : 0.080773574s.

Current KD-tree: KDTree{minx=4.95228271484375E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=4040571, splitPoint=5.147454833984375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('131634.84375, 17920.0, 131914.84375, 238080.0');
# objects along this split: 1606
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('131634.84375, 17920.0, 131914.84375, 238080.0');
Creating merge_table took: 0.025310454s.
DELETE FROM l8 WHERE centroid <@ box('131634.84375, 17920.0, 131914.84375, 238080.0');
Deleting border clusters took : 0.009375324s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1173 new clusters inserted back.
Running merge_clusters_along_splits took : 0.090757989s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=8080790, splitPoint=4.95228271484375E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('126638.4375, 17920.0, 126918.4375, 238080.0');
# objects along this split: 1537
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('126638.4375, 17920.0, 126918.4375, 238080.0');
Creating merge_table took: 0.018823997s.
DELETE FROM l8 WHERE centroid <@ box('126638.4375, 17920.0, 126918.4375, 238080.0');
Deleting border clusters took : 0.00755641s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1152 new clusters inserted back.
Running merge_clusters_along_splits took : 0.078891996s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=16162702, splitPoint=4.5619384765625E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('116645.625, 17920.0, 116925.625, 238080.0');
# objects along this split: 1576
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('116645.625, 17920.0, 116925.625, 238080.0');
Creating merge_table took: 0.019197749s.
DELETE FROM l8 WHERE centroid <@ box('116645.625, 17920.0, 116925.625, 238080.0');
Deleting border clusters took : 0.007756615s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1163 new clusters inserted back.
Running merge_clusters_along_splits took : 0.083099695s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=5.72751407623291E12, maxy=9.3E12, splitDir=VERTICAL, count=3985210, splitPoint=5.535070514678955E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('141557.80517578125, 17920.0, 141837.80517578125, 238080.0');
# objects along this split: 1589
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('141557.80517578125, 17920.0, 141837.80517578125, 238080.0');
Creating merge_table took: 0.018406195s.
DELETE FROM l8 WHERE centroid <@ box('141557.80517578125, 17920.0, 141837.80517578125, 238080.0');
Deleting border clusters took : 0.007778216s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1170 new clusters inserted back.
Running merge_clusters_along_splits took : 0.082134287s.

Current KD-tree: KDTree{minx=5.72751407623291E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=3987094, splitPoint=5.919957637786865E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('151410.91552734375, 17920.0, 151690.91552734375, 238080.0');
# objects along this split: 1595
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('151410.91552734375, 17920.0, 151690.91552734375, 238080.0');
Creating merge_table took: 0.019492179s.
DELETE FROM l8 WHERE centroid <@ box('151410.91552734375, 17920.0, 151690.91552734375, 238080.0');
Deleting border clusters took : 0.007915311s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1168 new clusters inserted back.
Running merge_clusters_along_splits took : 0.085186508s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=7972304, splitPoint=5.72751407623291E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('146484.3603515625, 17920.0, 146764.3603515625, 238080.0');
# objects along this split: 1559
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('146484.3603515625, 17920.0, 146764.3603515625, 238080.0');
Creating merge_table took: 0.019134254s.
DELETE FROM l8 WHERE centroid <@ box('146484.3603515625, 17920.0, 146764.3603515625, 238080.0');
Deleting border clusters took : 0.007904189s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1172 new clusters inserted back.
Running merge_clusters_along_splits took : 0.079334463s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.007826936841011E13, maxy=9.3E12, splitDir=VERTICAL, count=3991150, splitPoint=7.97140190359205E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('203927.88873195648, 17920.0, 204207.88873195648, 238080.0');
# objects along this split: 1516
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('203927.88873195648, 17920.0, 204207.88873195648, 238080.0');
Creating merge_table took: 0.018403631s.
DELETE FROM l8 WHERE centroid <@ box('203927.88873195648, 17920.0, 204207.88873195648, 238080.0');
Deleting border clusters took : 0.007818962s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1134 new clusters inserted back.
Running merge_clusters_along_splits took : 0.068022715s.

Current KD-tree: KDTree{minx=1.007826936841011E13, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=3971900, splitPoint=1.2189134684205055E13}
SELECT count(*) FROM l8 WHERE centroid <@ box('311901.8479156494, 17920.0, 312181.8479156494, 238080.0');
# objects along this split: 1529
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('311901.8479156494, 17920.0, 312181.8479156494, 238080.0');
Creating merge_table took: 0.017296926s.
DELETE FROM l8 WHERE centroid <@ box('311901.8479156494, 17920.0, 312181.8479156494, 238080.0');
Deleting border clusters took : 0.007536007s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1190 new clusters inserted back.
Running merge_clusters_along_splits took : 0.069055559s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=7963050, splitPoint=1.007826936841011E13}
SELECT count(*) FROM l8 WHERE centroid <@ box('257863.6958312988, 17920.0, 258143.6958312988, 238080.0');
# objects along this split: 1496
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('257863.6958312988, 17920.0, 258143.6958312988, 238080.0');
Creating merge_table took: 0.018341777s.
DELETE FROM l8 WHERE centroid <@ box('257863.6958312988, 17920.0, 258143.6958312988, 238080.0');
Deleting border clusters took : 0.007474167s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1133 new clusters inserted back.
Running merge_clusters_along_splits took : 0.069064375s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=15935354, splitPoint=6.11240119934082E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('156337.470703125, 17920.0, 156617.470703125, 238080.0');
# objects along this split: 1540
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('156337.470703125, 17920.0, 156617.470703125, 238080.0');
Creating merge_table took: 0.019695267s.
DELETE FROM l8 WHERE centroid <@ box('156337.470703125, 17920.0, 156617.470703125, 238080.0');
Deleting border clusters took : 0.008208076s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1142 new clusters inserted back.
Running merge_clusters_along_splits took : 0.080494299s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=32098056, splitPoint=5.342626953125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('136631.25, 17920.0, 136911.25, 238080.0');
# objects along this split: 1562
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('136631.25, 17920.0, 136911.25, 238080.0');
Creating merge_table took: 0.019659099s.
DELETE FROM l8 WHERE centroid <@ box('136631.25, 17920.0, 136911.25, 238080.0');
Deleting border clusters took : 0.007778817s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1161 new clusters inserted back.
Running merge_clusters_along_splits took : 0.079244867s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=63999853, splitPoint=3.78125E12}
SELECT count(*) FROM l8 WHERE centroid <@ box('96660.0, 17920.0, 96940.0, 238080.0');
# objects along this split: 1558
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l8 WHERE centroid <@ box('96660.0, 17920.0, 96940.0, 238080.0');
Creating merge_table took: 0.025563871s.
DELETE FROM l8 WHERE centroid <@ box('96660.0, 17920.0, 96940.0, 238080.0');
Deleting border clusters took : 0.009573447s.
INSERT INTO l8 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
1155 new clusters inserted back.
Running merge_clusters_along_splits took : 0.091035589s.
************************************************
Merge splits took: 4.068271458s.
************************************************
Running single_node_clustering_algo across all shards for level7...
SELECT run_command_on_shards('l8', $$ SELECT single_node_clustering_algo('%1$s', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l8_102149" : "l7_102181", "l8_102137" : "l7_102169", "l8_102160" : "l7_102192", "l8_102151" : "l7_102183", "l8_102144" : "l7_102176", "l8_102142" : "l7_102174", "l8_102156" : "l7_102188", "l8_102136" : "l7_102168", "l8_102164" : "l7_102196", "l8_102140" : "l7_102172", "l8_102166" : "l7_102198", "l8_102159" : "l7_102191", "l8_102146" : "l7_102178", "l8_102145" : "l7_102177", "l8_102167" : "l7_102199", "l8_102157" : "l7_102189", "l8_102165" : "l7_102197", "l8_102139" : "l7_102171", "l8_102161" : "l7_102193", "l8_102155" : "l7_102187", "l8_102138" : "l7_102170", "l8_102148" : "l7_102180", "l8_102150" : "l7_102182", "l8_102158" : "l7_102190", "l8_102163" : "l7_102195", "l8_102141" : "l7_102173", "l8_102143" : "l7_102175", "l8_102152" : "l7_102184", "l8_102162" : "l7_102194", "l8_102153" : "l7_102185", "l8_102147" : "l7_102179", "l8_102154" : "l7_102186"}}'::jsonb)$$);

************************************************
Running single node clustering in parallel took: 10.489937513s.
************************************************

(102136,t,5863)
(102137,t,5868)
(102138,t,5928)
(102139,t,5940)
(102140,t,5851)
(102141,t,5855)
(102142,t,5850)
(102143,t,5868)
(102144,t,5853)
(102145,t,5872)
(102146,t,5855)
(102147,t,62276)
(102148,t,5957)
(102149,t,5899)
(102150,t,5953)
(102151,t,5874)
(102152,t,5820)
(102153,t,62181)
(102154,t,62509)
(102155,t,5941)
(102156,t,5850)
(102157,t,5816)
(102158,t,5924)
(102159,t,5825)
(102160,t,5806)
(102161,t,5924)
(102162,t,54927)
(102163,t,5821)
(102164,t,5862)
(102165,t,5947)
(102166,t,5789)
(102167,t,5817)

Building spatial indexes on level7...
UPDATE l7 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.214052443s.
DROP INDEX IF EXISTS l7_centroid_gist;
Drop existing index on centroid took: 0.001078221s.
CREATE INDEX l7_centroid_gist ON l7 USING gist(centroid);
Creating gist index on centroid took: 0.587996174s.


Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.08515625E12, maxy=9.3E12, splitDir=VERTICAL, count=3987531, splitPoint=8.92578125E11}
SELECT count(*) FROM l7 WHERE centroid <@ box('11285.0, 8960.0, 11565.0, 119040.0');
# objects along this split: 787
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('11285.0, 8960.0, 11565.0, 119040.0');
Creating merge_table took: 0.020339536s.
DELETE FROM l7 WHERE centroid <@ box('11285.0, 8960.0, 11565.0, 119040.0');
Deleting border clusters took : 0.008212286s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
591 new clusters inserted back.
Running merge_clusters_along_splits took : 0.057390076s.

Current KD-tree: KDTree{minx=1.08515625E12, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=3988766, splitPoint=1.277734375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('16215.0, 8960.0, 16495.0, 119040.0');
# objects along this split: 802
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('16215.0, 8960.0, 16495.0, 119040.0');
Creating merge_table took: 0.015523017s.
DELETE FROM l7 WHERE centroid <@ box('16215.0, 8960.0, 16495.0, 119040.0');
Deleting border clusters took : 0.00781645s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
588 new clusters inserted back.
Running merge_clusters_along_splits took : 0.050191144s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.4703125E12, maxy=9.3E12, splitDir=VERTICAL, count=7976297, splitPoint=1.08515625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('13750.0, 8960.0, 14030.0, 119040.0');
# objects along this split: 814
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('13750.0, 8960.0, 14030.0, 119040.0');
Creating merge_table took: 0.015604881s.
DELETE FROM l7 WHERE centroid <@ box('13750.0, 8960.0, 14030.0, 119040.0');
Deleting border clusters took : 0.007438318s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
584 new clusters inserted back.
Running merge_clusters_along_splits took : 0.048954373s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=1.85546875E12, maxy=9.3E12, splitDir=VERTICAL, count=3987311, splitPoint=1.662890625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('21145.0, 8960.0, 21425.0, 119040.0');
# objects along this split: 798
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('21145.0, 8960.0, 21425.0, 119040.0');
Creating merge_table took: 0.015483717s.
DELETE FROM l7 WHERE centroid <@ box('21145.0, 8960.0, 21425.0, 119040.0');
Deleting border clusters took : 0.0076197s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
592 new clusters inserted back.
Running merge_clusters_along_splits took : 0.049090098s.

Current KD-tree: KDTree{minx=1.85546875E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=3989715, splitPoint=2.048046875E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('26075.0, 8960.0, 26355.0, 119040.0');
# objects along this split: 804
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('26075.0, 8960.0, 26355.0, 119040.0');
Creating merge_table took: 0.01944861s.
DELETE FROM l7 WHERE centroid <@ box('26075.0, 8960.0, 26355.0, 119040.0');
Deleting border clusters took : 0.007886165s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
586 new clusters inserted back.
Running merge_clusters_along_splits took : 0.058447148s.

Current KD-tree: KDTree{minx=1.4703125E12, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=7977026, splitPoint=1.85546875E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('23610.0, 8960.0, 23890.0, 119040.0');
# objects along this split: 799
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('23610.0, 8960.0, 23890.0, 119040.0');
Creating merge_table took: 0.016533859s.
DELETE FROM l7 WHERE centroid <@ box('23610.0, 8960.0, 23890.0, 119040.0');
Deleting border clusters took : 0.007152349s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
580 new clusters inserted back.
Running merge_clusters_along_splits took : 0.049028645s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=2.240625E12, maxy=9.3E12, splitDir=VERTICAL, count=15953323, splitPoint=1.4703125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('18680.0, 8960.0, 18960.0, 119040.0');
# objects along this split: 819
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('18680.0, 8960.0, 18960.0, 119040.0');
Creating merge_table took: 0.016036905s.
DELETE FROM l7 WHERE centroid <@ box('18680.0, 8960.0, 18960.0, 119040.0');
Deleting border clusters took : 0.008319699s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
602 new clusters inserted back.
Running merge_clusters_along_splits took : 0.050792313s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=2.62578125E12, maxy=9.3E12, splitDir=VERTICAL, count=3987807, splitPoint=2.433203125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('31005.0, 8960.0, 31285.0, 119040.0');
# objects along this split: 809
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('31005.0, 8960.0, 31285.0, 119040.0');
Creating merge_table took: 0.020626296s.
DELETE FROM l7 WHERE centroid <@ box('31005.0, 8960.0, 31285.0, 119040.0');
Deleting border clusters took : 0.008546338s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
601 new clusters inserted back.
Running merge_clusters_along_splits took : 0.061165662s.

Current KD-tree: KDTree{minx=2.62578125E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=3988487, splitPoint=2.818359375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('35935.0, 8960.0, 36215.0, 119040.0');
# objects along this split: 797
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('35935.0, 8960.0, 36215.0, 119040.0');
Creating merge_table took: 0.015707362s.
DELETE FROM l7 WHERE centroid <@ box('35935.0, 8960.0, 36215.0, 119040.0');
Deleting border clusters took : 0.008208323s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
570 new clusters inserted back.
Running merge_clusters_along_splits took : 0.047182576s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.0109375E12, maxy=9.3E12, splitDir=VERTICAL, count=7976294, splitPoint=2.62578125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('33470.0, 8960.0, 33750.0, 119040.0');
# objects along this split: 801
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('33470.0, 8960.0, 33750.0, 119040.0');
Creating merge_table took: 0.015933778s.
DELETE FROM l7 WHERE centroid <@ box('33470.0, 8960.0, 33750.0, 119040.0');
Deleting border clusters took : 0.007485191s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
592 new clusters inserted back.
Running merge_clusters_along_splits took : 0.048830252s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.39609375E12, maxy=9.3E12, splitDir=VERTICAL, count=3986088, splitPoint=3.203515625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('40865.0, 8960.0, 41145.0, 119040.0');
# objects along this split: 830
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('40865.0, 8960.0, 41145.0, 119040.0');
Creating merge_table took: 0.01641444s.
DELETE FROM l7 WHERE centroid <@ box('40865.0, 8960.0, 41145.0, 119040.0');
Deleting border clusters took : 0.008850573s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
591 new clusters inserted back.
Running merge_clusters_along_splits took : 0.049003206s.

Current KD-tree: KDTree{minx=3.39609375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=3986092, splitPoint=3.588671875E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('45795.0, 8960.0, 46075.0, 119040.0');
# objects along this split: 819
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('45795.0, 8960.0, 46075.0, 119040.0');
Creating merge_table took: 0.015776365s.
DELETE FROM l7 WHERE centroid <@ box('45795.0, 8960.0, 46075.0, 119040.0');
Deleting border clusters took : 0.008025487s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
602 new clusters inserted back.
Running merge_clusters_along_splits took : 0.048918081s.

Current KD-tree: KDTree{minx=3.0109375E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=7972180, splitPoint=3.39609375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('43330.0, 8960.0, 43610.0, 119040.0');
# objects along this split: 821
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('43330.0, 8960.0, 43610.0, 119040.0');
Creating merge_table took: 0.01617493s.
DELETE FROM l7 WHERE centroid <@ box('43330.0, 8960.0, 43610.0, 119040.0');
Deleting border clusters took : 0.525153893s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
611 new clusters inserted back.
Running merge_clusters_along_splits took : 0.048661889s.

Current KD-tree: KDTree{minx=2.240625E12, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=15948474, splitPoint=3.0109375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('38400.0, 8960.0, 38680.0, 119040.0');
# objects along this split: 822
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('38400.0, 8960.0, 38680.0, 119040.0');
Creating merge_table took: 0.015020817s.
DELETE FROM l7 WHERE centroid <@ box('38400.0, 8960.0, 38680.0, 119040.0');
Deleting border clusters took : 0.695288218s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
589 new clusters inserted back.
Running merge_clusters_along_splits took : 0.584772471s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=3.78125E12, maxy=9.3E12, splitDir=VERTICAL, count=31901797, splitPoint=2.240625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('28540.0, 8960.0, 28820.0, 119040.0');
# objects along this split: 811
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('28540.0, 8960.0, 28820.0, 119040.0');
Creating merge_table took: 0.019057876s.
DELETE FROM l7 WHERE centroid <@ box('28540.0, 8960.0, 28820.0, 119040.0');
Deleting border clusters took : 0.556793161s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
587 new clusters inserted back.
Running merge_clusters_along_splits took : 0.060901609s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.17159423828125E12, maxy=9.3E12, splitDir=VERTICAL, count=4038882, splitPoint=3.976422119140625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('50758.203125, 8960.0, 51038.203125, 119040.0');
# objects along this split: 811
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('50758.203125, 8960.0, 51038.203125, 119040.0');
Creating merge_table took: 0.015455861s.
DELETE FROM l7 WHERE centroid <@ box('50758.203125, 8960.0, 51038.203125, 119040.0');
Deleting border clusters took : 0.164977563s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
610 new clusters inserted back.
Running merge_clusters_along_splits took : 0.051686968s.

Current KD-tree: KDTree{minx=4.17159423828125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=4043030, splitPoint=4.366766357421875E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('55754.609375, 8960.0, 56034.609375, 119040.0');
# objects along this split: 804
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('55754.609375, 8960.0, 56034.609375, 119040.0');
Creating merge_table took: 0.015864552s.
DELETE FROM l7 WHERE centroid <@ box('55754.609375, 8960.0, 56034.609375, 119040.0');
Deleting border clusters took : 0.007535263s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
592 new clusters inserted back.
Running merge_clusters_along_splits took : 0.04696051s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=4.5619384765625E12, maxy=9.3E12, splitDir=VERTICAL, count=8081912, splitPoint=4.17159423828125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('53256.40625, 8960.0, 53536.40625, 119040.0');
# objects along this split: 825
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('53256.40625, 8960.0, 53536.40625, 119040.0');
Creating merge_table took: 0.015493176s.
DELETE FROM l7 WHERE centroid <@ box('53256.40625, 8960.0, 53536.40625, 119040.0');
Deleting border clusters took : 0.007563248s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
615 new clusters inserted back.
Running merge_clusters_along_splits took : 0.04826083s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=4.95228271484375E12, maxy=9.3E12, splitDir=VERTICAL, count=4040219, splitPoint=4.757110595703125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('60751.015625, 8960.0, 61031.015625, 119040.0');
# objects along this split: 806
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('60751.015625, 8960.0, 61031.015625, 119040.0');
Creating merge_table took: 0.015991267s.
DELETE FROM l7 WHERE centroid <@ box('60751.015625, 8960.0, 61031.015625, 119040.0');
Deleting border clusters took : 0.007439904s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
586 new clusters inserted back.
Running merge_clusters_along_splits took : 0.047040457s.

Current KD-tree: KDTree{minx=4.95228271484375E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=4040571, splitPoint=5.147454833984375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('65747.421875, 8960.0, 66027.421875, 119040.0');
# objects along this split: 815
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('65747.421875, 8960.0, 66027.421875, 119040.0');
Creating merge_table took: 0.018191209s.
DELETE FROM l7 WHERE centroid <@ box('65747.421875, 8960.0, 66027.421875, 119040.0');
Deleting border clusters took : 0.007927584s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
615 new clusters inserted back.
Running merge_clusters_along_splits took : 0.060751505s.

Current KD-tree: KDTree{minx=4.5619384765625E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=8080790, splitPoint=4.95228271484375E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('63249.21875, 8960.0, 63529.21875, 119040.0');
# objects along this split: 829
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('63249.21875, 8960.0, 63529.21875, 119040.0');
Creating merge_table took: 0.015882745s.
DELETE FROM l7 WHERE centroid <@ box('63249.21875, 8960.0, 63529.21875, 119040.0');
Deleting border clusters took : 0.007309262s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
580 new clusters inserted back.
Running merge_clusters_along_splits took : 0.049089427s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=5.342626953125E12, maxy=9.3E12, splitDir=VERTICAL, count=16162702, splitPoint=4.5619384765625E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('58252.8125, 8960.0, 58532.8125, 119040.0');
# objects along this split: 817
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('58252.8125, 8960.0, 58532.8125, 119040.0');
Creating merge_table took: 0.015342712s.
DELETE FROM l7 WHERE centroid <@ box('58252.8125, 8960.0, 58532.8125, 119040.0');
Deleting border clusters took : 0.007328156s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
585 new clusters inserted back.
Running merge_clusters_along_splits took : 0.053364665s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=5.72751407623291E12, maxy=9.3E12, splitDir=VERTICAL, count=3985210, splitPoint=5.535070514678955E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('70708.90258789062, 8960.0, 70988.90258789062, 119040.0');
# objects along this split: 805
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('70708.90258789062, 8960.0, 70988.90258789062, 119040.0');
Creating merge_table took: 0.015455933s.
DELETE FROM l7 WHERE centroid <@ box('70708.90258789062, 8960.0, 70988.90258789062, 119040.0');
Deleting border clusters took : 0.007358545s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
563 new clusters inserted back.
Running merge_clusters_along_splits took : 0.046181596s.

Current KD-tree: KDTree{minx=5.72751407623291E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=3987094, splitPoint=5.919957637786865E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('75635.45776367188, 8960.0, 75915.45776367188, 119040.0');
# objects along this split: 807
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('75635.45776367188, 8960.0, 75915.45776367188, 119040.0');
Creating merge_table took: 0.016101309s.
DELETE FROM l7 WHERE centroid <@ box('75635.45776367188, 8960.0, 75915.45776367188, 119040.0');
Deleting border clusters took : 0.007050485s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
585 new clusters inserted back.
Running merge_clusters_along_splits took : 0.048038469s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=6.11240119934082E12, maxy=9.3E12, splitDir=VERTICAL, count=7972304, splitPoint=5.72751407623291E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('73172.18017578125, 8960.0, 73452.18017578125, 119040.0');
# objects along this split: 815
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('73172.18017578125, 8960.0, 73452.18017578125, 119040.0');
Creating merge_table took: 0.015841872s.
DELETE FROM l7 WHERE centroid <@ box('73172.18017578125, 8960.0, 73452.18017578125, 119040.0');
Deleting border clusters took : 0.007190682s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
596 new clusters inserted back.
Running merge_clusters_along_splits took : 0.04740888s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.007826936841011E13, maxy=9.3E12, splitDir=VERTICAL, count=3991150, splitPoint=7.97140190359205E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('101893.94436597824, 8960.0, 102173.94436597824, 119040.0');
# objects along this split: 822
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('101893.94436597824, 8960.0, 102173.94436597824, 119040.0');
Creating merge_table took: 0.015458394s.
DELETE FROM l7 WHERE centroid <@ box('101893.94436597824, 8960.0, 102173.94436597824, 119040.0');
Deleting border clusters took : 0.008090041s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
593 new clusters inserted back.
Running merge_clusters_along_splits took : 0.045395884s.

Current KD-tree: KDTree{minx=1.007826936841011E13, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=3971900, splitPoint=1.2189134684205055E13}
SELECT count(*) FROM l7 WHERE centroid <@ box('155880.9239578247, 8960.0, 156160.9239578247, 119040.0');
# objects along this split: 819
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('155880.9239578247, 8960.0, 156160.9239578247, 119040.0');
Creating merge_table took: 0.015303367s.
DELETE FROM l7 WHERE centroid <@ box('155880.9239578247, 8960.0, 156160.9239578247, 119040.0');
Deleting border clusters took : 0.007078366s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
611 new clusters inserted back.
Running merge_clusters_along_splits took : 0.044257981s.

Current KD-tree: KDTree{minx=6.11240119934082E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=7963050, splitPoint=1.007826936841011E13}
SELECT count(*) FROM l7 WHERE centroid <@ box('128861.8479156494, 8960.0, 129141.8479156494, 119040.0');
# objects along this split: 805
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('128861.8479156494, 8960.0, 129141.8479156494, 119040.0');
Creating merge_table took: 0.014982961s.
DELETE FROM l7 WHERE centroid <@ box('128861.8479156494, 8960.0, 129141.8479156494, 119040.0');
Deleting border clusters took : 0.007130767s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
592 new clusters inserted back.
Running merge_clusters_along_splits took : 0.045812151s.

Current KD-tree: KDTree{minx=5.342626953125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=15935354, splitPoint=6.11240119934082E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('78098.7353515625, 8960.0, 78378.7353515625, 119040.0');
# objects along this split: 830
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('78098.7353515625, 8960.0, 78378.7353515625, 119040.0');
Creating merge_table took: 0.015557827s.
DELETE FROM l7 WHERE centroid <@ box('78098.7353515625, 8960.0, 78378.7353515625, 119040.0');
Deleting border clusters took : 0.007012211s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
609 new clusters inserted back.
Running merge_clusters_along_splits took : 0.049676001s.

Current KD-tree: KDTree{minx=3.78125E12, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=32098056, splitPoint=5.342626953125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('68245.625, 8960.0, 68525.625, 119040.0');
# objects along this split: 817
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('68245.625, 8960.0, 68525.625, 119040.0');
Creating merge_table took: 0.015701139s.
DELETE FROM l7 WHERE centroid <@ box('68245.625, 8960.0, 68525.625, 119040.0');
Deleting border clusters took : 0.007109476s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
608 new clusters inserted back.
Running merge_clusters_along_splits took : 0.050778924s.

Current KD-tree: KDTree{minx=7.0E11, miny=7.0E11, maxx=1.43E13, maxy=9.3E12, splitDir=VERTICAL, count=63999853, splitPoint=3.78125E12}
SELECT count(*) FROM l7 WHERE centroid <@ box('48260.0, 8960.0, 48540.0, 119040.0');
# objects along this split: 785
DROP TABLE IF EXISTS merge_table;
CREATE UNLOGGED TABLE merge_table AS SELECT * FROM l7 WHERE centroid <@ box('48260.0, 8960.0, 48540.0, 119040.0');
Creating merge_table took: 0.020312697s.
DELETE FROM l7 WHERE centroid <@ box('48260.0, 8960.0, 48540.0, 119040.0');
Deleting border clusters took : 0.008355213s.
INSERT INTO l7 SELECT (v->>'x')::int4, (v->>'y')::int4, (v->>'z')::int4, (v->>'hash_key')::int, (v->>'cluster_agg'), (v->>'cx')::real, (v->>'cy')::real, (v->>'minx')::real, (v->>'miny')::real, (v->>'maxx')::real, (v->>'maxy')::real, (v->>'centroid')::point FROM (SELECT merge_clusters_along_splits(array_agg(to_jsonb(merge_table)), '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":0.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "splitDir":"vertical"}'::jsonb)v FROM merge_table) subquery
583 new clusters inserted back.
Running merge_clusters_along_splits took : 0.056534289s.
************************************************
Merge splits took: 5.303510561s.
************************************************
Applying single_node_clustering_algo directly on master on clusters in level 7 for level6...
SELECT single_node_clustering_algo('l7', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l7" : "l6"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 21.112079232s.
************************************************

Building spatial indexes on level6...
UPDATE l6 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.278795605s.
DROP INDEX IF EXISTS l6_centroid_gist;
Drop existing index on centroid took: 6.05469E-4s.
CREATE INDEX l6_centroid_gist ON l6 USING gist(centroid);
Creating gist index on centroid took: 0.846035092s.

Applying single_node_clustering_algo directly on master on clusters in level 6 for level5...
SELECT single_node_clustering_algo('l6', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l6" : "l5"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 4.904759871s.
************************************************

Building spatial indexes on level5...
UPDATE l5 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.075803499s.
DROP INDEX IF EXISTS l5_centroid_gist;
Drop existing index on centroid took: 5.96491E-4s.
CREATE INDEX l5_centroid_gist ON l5 USING gist(centroid);
Creating gist index on centroid took: 0.176324832s.

Applying single_node_clustering_algo directly on master on clusters in level 5 for level4...
SELECT single_node_clustering_algo('l5', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l5" : "l4"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 1.203878151s.
************************************************

Building spatial indexes on level4...
UPDATE l4 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.022511563s.
DROP INDEX IF EXISTS l4_centroid_gist;
Drop existing index on centroid took: 4.6511E-4s.
CREATE INDEX l4_centroid_gist ON l4 USING gist(centroid);
Creating gist index on centroid took: 0.030702311s.

Applying single_node_clustering_algo directly on master on clusters in level 4 for level3...
SELECT single_node_clustering_algo('l4', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l4" : "l3"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 0.309723932s.
************************************************

Building spatial indexes on level3...
UPDATE l3 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.00690273s.
DROP INDEX IF EXISTS l3_centroid_gist;
Drop existing index on centroid took: 3.97901E-4s.
CREATE INDEX l3_centroid_gist ON l3 USING gist(centroid);
Creating gist index on centroid took: 0.006068869s.

Applying single_node_clustering_algo directly on master on clusters in level 3 for level2...
SELECT single_node_clustering_algo('l3', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l3" : "l2"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 0.079435325s.
************************************************

Building spatial indexes on level2...
UPDATE l2 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.002593199s.
DROP INDEX IF EXISTS l2_centroid_gist;
Drop existing index on centroid took: 3.44986E-4s.
CREATE INDEX l2_centroid_gist ON l2 USING gist(centroid);
Creating gist index on centroid took: 0.002679493s.

Applying single_node_clustering_algo directly on master on clusters in level 2 for level1...
SELECT single_node_clustering_algo('l2', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l2" : "l1"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 0.022205173s.
************************************************

Building spatial indexes on level1...
UPDATE l1 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.001729185s.
DROP INDEX IF EXISTS l1_centroid_gist;
Drop existing index on centroid took: 3.33204E-4s.
CREATE INDEX l1_centroid_gist ON l1 USING gist(centroid);
Creating gist index on centroid took: 0.001764803s.

Applying single_node_clustering_algo directly on master on clusters in level 1 for level0...
SELECT single_node_clustering_algo('l1', '{"xCol":"x", "yCol":"y", "zCol":"z", "zOrder":"asc", "zoomFactor":2.0, "theta":1.0, "aggKeyDelimiter": "__", "bboxW":140, "bboxH":140, "topk":0, "fields":["x", "y", "z", "hash_key", "cluster_agg", "cx", "cy"], "types":["int4", "int4", "int4", "int", "text", "real", "real"], "aggDimensionFields": [], "aggMeasureFields": [], "tableMap": {"l1" : "l0"}}'::jsonb)

************************************************
Running single node clustering on Citus master took: 0.007118063s.
************************************************

Building spatial indexes on level0...
UPDATE l0 SET minx = cx - 70, miny = cy - 70, maxx = cx + 70, maxy = cy + 70, centroid = point(cx, cy);
Updating minx, miny, maxx, maxy & centroid took: 0.001869182s.
DROP INDEX IF EXISTS l0_centroid_gist;
Drop existing index on centroid took: 3.14372E-4s.
CREATE INDEX l0_centroid_gist ON l0 USING gist(centroid);
Creating gist index on centroid took: 0.001467491s.

Saving autodd info...
CREATE TABLE IF NOT EXISTS autodd_infos(project_id text, autodd_id int, gson text);
DELETE FROM autodd_infos WHERE autodd_id = 0;
INSERT INTO autodd_infos VALUES ('autodd_citus', 0, '{"columnNames":["x","y","z"],"tableNames":["l0","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","bottom_level"],"zoomFactor":2.0,"bboxW":140,"bboxH":140,"citusHashKeys":[0,1,2,3,4,5,6,8,9,10,11,13,16,17,18,21,22,24,27,28,31,36,37,39,41,48,50,52,58,62,85,136],"kdTreeNodes":[{"minx":7.0E11,"miny":7.0E11,"maxx":8.92578125E11,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994547,"splitPoint":0.0},{"minx":8.92578125E11,"miny":7.0E11,"maxx":1.08515625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992984,"splitPoint":0.0},{"minx":1.08515625E12,"miny":7.0E11,"maxx":1.277734375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994161,"splitPoint":0.0},{"minx":1.277734375E12,"miny":7.0E11,"maxx":1.4703125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994605,"splitPoint":0.0},{"minx":1.4703125E12,"miny":7.0E11,"maxx":1.662890625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994615,"splitPoint":0.0},{"minx":1.662890625E12,"miny":7.0E11,"maxx":1.85546875E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992696,"splitPoint":0.0},{"minx":1.85546875E12,"miny":7.0E11,"maxx":2.048046875E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1995215,"splitPoint":0.0},{"minx":2.048046875E12,"miny":7.0E11,"maxx":2.240625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994500,"splitPoint":0.0},{"minx":2.240625E12,"miny":7.0E11,"maxx":2.433203125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992793,"splitPoint":0.0},{"minx":2.433203125E12,"miny":7.0E11,"maxx":2.62578125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1995014,"splitPoint":0.0},{"minx":2.62578125E12,"miny":7.0E11,"maxx":2.818359375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992882,"splitPoint":0.0},{"minx":2.818359375E12,"miny":7.0E11,"maxx":3.0109375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1995605,"splitPoint":0.0},{"minx":3.0109375E12,"miny":7.0E11,"maxx":3.203515625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1993590,"splitPoint":0.0},{"minx":3.203515625E12,"miny":7.0E11,"maxx":3.39609375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992498,"splitPoint":0.0},{"minx":3.39609375E12,"miny":7.0E11,"maxx":3.588671875E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1992426,"splitPoint":0.0},{"minx":3.588671875E12,"miny":7.0E11,"maxx":3.78125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1993666,"splitPoint":0.0},{"minx":3.78125E12,"miny":7.0E11,"maxx":3.976422119140625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2020357,"splitPoint":0.0},{"minx":3.976422119140625E12,"miny":7.0E11,"maxx":4.17159423828125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2018525,"splitPoint":0.0},{"minx":4.17159423828125E12,"miny":7.0E11,"maxx":4.366766357421875E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2021950,"splitPoint":0.0},{"minx":4.366766357421875E12,"miny":7.0E11,"maxx":4.5619384765625E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2021080,"splitPoint":0.0},{"minx":4.5619384765625E12,"miny":7.0E11,"maxx":4.757110595703125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2019663,"splitPoint":0.0},{"minx":4.757110595703125E12,"miny":7.0E11,"maxx":4.95228271484375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2020556,"splitPoint":0.0},{"minx":4.95228271484375E12,"miny":7.0E11,"maxx":5.147454833984375E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2020367,"splitPoint":0.0},{"minx":5.147454833984375E12,"miny":7.0E11,"maxx":5.342626953125E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2020204,"splitPoint":0.0},{"minx":5.342626953125E12,"miny":7.0E11,"maxx":5.535070514678955E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1990718,"splitPoint":0.0},{"minx":5.535070514678955E12,"miny":7.0E11,"maxx":5.72751407623291E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1994492,"splitPoint":0.0},{"minx":5.72751407623291E12,"miny":7.0E11,"maxx":5.919957637786865E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1993857,"splitPoint":0.0},{"minx":5.919957637786865E12,"miny":7.0E11,"maxx":6.11240119934082E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":1993237,"splitPoint":0.0},{"minx":6.11240119934082E12,"miny":7.0E11,"maxx":7.97140190359205E12,"maxy":9.3E12,"splitDir":"VERTICAL","count":2008953,"splitPoint":0.0},{"minx":7.97140190359205E12,"miny":7.0E11,"maxx":1.007826936841011E13,"maxy":9.3E12,"splitDir":"VERTICAL","count":1982197,"splitPoint":0.0},{"minx":1.007826936841011E13,"miny":7.0E11,"maxx":1.2189134684205055E13,"maxy":9.3E12,"splitDir":"VERTICAL","count":1986409,"splitPoint":0.0},{"minx":1.2189134684205055E13,"miny":7.0E11,"maxx":1.43E13,"maxy":9.3E12,"splitDir":"VERTICAL","count":1985491,"splitPoint":0.0}]}');
drop table if exists bbox_autodd_citus_autodd0_level1layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level1layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level2layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level2layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level3layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level3layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level4layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level4layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level5layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level5layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level6layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level6layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level7layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level7layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level8layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level8layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level9layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level9layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
drop table if exists bbox_autodd_citus_autodd0_level10layer0;
CREATE UNLOGGED TABLE bbox_autodd_citus_autodd0_level10layer0 (citus_distribution_id int, cx double precision, cy double precision, minx double precision, miny double precision, maxx double precision, maxy double precision, geom box)
Indexing took: 611s.
Done precomputing!
Completed recomputing indexes. Server restarting...
Backend server started...
^Cbash-4.4# exit
